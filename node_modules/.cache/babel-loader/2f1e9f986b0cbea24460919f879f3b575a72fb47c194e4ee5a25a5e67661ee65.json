{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"full\"\n};\nconst _hoisted_2 = {\n  class: \"login\"\n};\nconst _hoisted_3 = {\n  class: \"input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Login\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.login && $options.login(...args))\n  }, \"Login\")]), _cache[3] || (_cache[3] = _createElementVNode(\"a\", {\n    href: \"\"\n  }, \"Hai dimenticato le credenziali?\", -1 /* HOISTED */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","type","_cache","$event","$data","email","placeholder","password","onClick","args","$options","login","href"],"sources":["/home/ilaria/progettino/src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"full\">\n        <h1>Login</h1>\n        <div class=\"login\">\n            <div class=\"input\">\n                <input type=\"text\" v-model=\"email\" placeholder=\"Email\" />\n                <input type=\"password\" v-model=\"password\" placeholder=\"Password\" />\n                <button v-on:click=\"login\">Login</button>\n            </div>\n            <a href=\"\">Hai dimenticato le credenziali?</a>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport router from '../routers';\nexport default {\n    name:'Login',\n\n    data() {\n        return {\n            email: '',\n            password: ''\n        }\n    },\n\n    methods: {\n        async login() {\n    try {\n        let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/login`, {\n            email: this.email,\n            password: this.password\n        });\n\n        console.log(response);\n\n        if (response.status == 200 && response.data.length > 0) {\n            localStorage.setItem(\"user-info\", JSON.stringify(response.data[0]));\n            this.$router.push({ name: 'Home' });\n\n        } else {\n            console.warn(\"Login non riuscito, dati non validi.\");\n            console.log(response.data);\n        }\n    } catch (error) {\n        console.error(\"Errore durante il login:\", error);\n    }\n}\n    },\n\n    mounted() {\n        let user = localStorage.getItem('user-info')\n        if (user) {\n            this.$router.push({ name: 'Home' })\n        }\n    }\n}\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EAERA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC;AAAO;;uBAH1BC,mBAAA,CAUM,OAVNC,UAUM,G,0BATFC,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAOM,OAPNC,UAOM,GANFD,mBAAA,CAIM,OAJNE,UAIM,G,gBAHFF,mBAAA,CAAyD;IAAlDG,IAAI,EAAC,MAAM;IALlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAK4CC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAnBF,KAAA,CAAAC,KAAK,E,mBACjCP,mBAAA,CAAmE;IAA5DG,IAAI,EAAC,UAAU;IANtC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMgDC,KAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,KAAA,CAAAG,QAAQ,E,GACxCT,mBAAA,CAAyC;IAA5BU,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;KAAE,OAAK,E,6BAEpCX,mBAAA,CAA8C;IAA3Cc,IAAI,EAAC;EAAE,GAAC,iCAA+B,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}