{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nimport _imports_0 from '../assets/logo@2x.png';\nconst _hoisted_1 = {\n  class: \"full\"\n};\nconst _hoisted_2 = {\n  class: \"login\"\n};\nconst _hoisted_3 = {\n  class: \"input\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"error\",\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Logo\"\n  }, null, -1)), _createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"Welcome in KanbanApp!\", -1)), _cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Please Login\", -1)), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.login && $options.login(...args), [\"enter\"])),\n    placeholder: \"Email\"\n  }, null, 544), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.login && $options.login(...args), [\"enter\"])),\n    placeholder: \"Password\"\n  }, null, 544), [[_vModelText, $data.password]]), _createElementVNode(\"button\", {\n    onKeyup: _cache[4] || (_cache[4] = _withKeys((...args) => $options.login && $options.login(...args), [\"enter\"])),\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.login && $options.login(...args))\n  }, \"Login\", 32)]), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString($data.errorMessage), 1)) : _createCommentVNode(\"\", true)])]);\n}","map":{"version":3,"names":["_imports_0","class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","src","alt","_hoisted_2","_hoisted_3","type","_cache","$event","$data","email","onKeyup","_withKeys","args","$options","login","placeholder","password","onClick","errorMessage","_hoisted_4","_toDisplayString","_createCommentVNode"],"sources":["/home/ilaria/kanbanapp/src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"full\">\n        <img src=\"../assets/logo@2x.png\" alt=\"Logo\"/>\n        <div class=\"login\">\n            <h1>Welcome in KanbanApp!</h1>\n            <h2>Please Login</h2>\n            <div class=\"input\">\n                <input type=\"text\" v-model=\"email\" @keyup.enter=\"login\" placeholder=\"Email\" />\n                <input type=\"password\" v-model=\"password\" @keyup.enter=\"login\" placeholder=\"Password\" />\n                <button @keyup.enter=\"login\" v-on:click=\"login\">Login</button>\n            </div>\n            <p class=\"error\" v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport router from '../routers';\nexport default {\n    name: 'Login',\n\n    data() {\n        return {\n            email: '',\n            password: '',\n            errorMessage: '',\n        }\n    },\n\n    methods: {\n        async login() {\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/login`, {\n                    email: this.email,\n                    password: this.password\n                });\n\n                console.log(response);\n                if (response.status == 200 && Object.keys(response.data).length > 0) { //faccio così con data perchè è di tipo oggetto -> Object.keys(), restituisce un array contenente tutte le chiavi dell'oggetto. Puoi uso .length su quell'array.\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n                    localStorage.setItem(\"id\", JSON.stringify(response.data.user.id));\n                    this.$router.push({ name: 'Home' });\n                } else {\n                    console.warn(\"Login failed, invalid data..\");\n                }\n                \n            } catch (error) {\n                if (this.email.trim() == '' || this.password.trim() == '') { //.trim rimuove gli spazi e gli a capo, controllo se sono vuoti e se uno dei due lo è mando un messaggio di errore\n                    this.errorMessage = 'The field cannot be empty.';\n                } else {\n                    this.errorMessage = 'Incorrect e-mail or password.'; //nel caso siano pieni entrambi, stampo messaggio di errore diverso\n                }\n                console.error(\"Error while logging in:\", error);\n            }\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se è loggato, rimando alla pagina di home\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId) {\n            this.$router.push({ name: 'Home' })\n        }\n    }\n}\n</script>"],"mappings":";OAEaA,UAA2B;;EAD/BC,KAAK,EAAC;AAAM;;EAERA,KAAK,EAAC;AAAO;;EAGTA,KAAK,EAAC;AAAO;;EAN9BC,GAAA;EAWeD,KAAK,EAAC,OAAO;EAAqBE,KAAmB,EAAnB;IAAA;EAAA;;;uBAV7CC,mBAAA,CAYM,OAZNC,UAYM,G,0BAXFC,mBAAA,CAA6C;IAAxCC,GAA2B,EAA3BP,UAA2B;IAACQ,GAAG,EAAC;iBACrCF,mBAAA,CASM,OATNG,UASM,G,0BARFH,mBAAA,CAA8B,YAA1B,uBAAqB,Q,0BACzBA,mBAAA,CAAqB,YAAjB,cAAY,QAChBA,mBAAA,CAIM,OAJNI,UAIM,G,gBAHFJ,mBAAA,CAA8E;IAAvEK,IAAI,EAAC,MAAM;IAPlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAO4CC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAPzDK,SAAA,KAAAC,IAAA,KAOiEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAEG,WAAW,EAAC;gCAAxCP,KAAA,CAAAC,KAAK,E,mBACjCT,mBAAA,CAAwF;IAAjFK,IAAI,EAAC,UAAU;IARtC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQgDC,KAAA,CAAAQ,QAAQ,GAAAT,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MARhEK,SAAA,KAAAC,IAAA,KAQwEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAEG,WAAW,EAAC;gCAA3CP,KAAA,CAAAQ,QAAQ,E,GACxChB,mBAAA,CAA8D;IAArDU,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAT9BK,SAAA,KAAAC,IAAA,KASsCC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAOK,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;KAAE,OAAK,M,GAElCJ,KAAA,CAAAU,YAAY,I,cAAnCpB,mBAAA,CAA+E,KAA/EqB,UAA+E,EAAAC,gBAAA,CAAnBZ,KAAA,CAAAU,YAAY,SAXpFG,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}