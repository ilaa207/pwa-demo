{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from './Header.vue';\nimport Modal from './Modal.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Accept',\n  data() {\n    return {\n      textContent: '',\n      // Contenuto del file di testo\n      //currentDate: new Date().toLocaleDateString() // Formatta la data\n      modalMessage: \"\",\n      // Stato per il messaggio del Modale\n      modalTitle: \"\" // Stato per il titolo del Modale\n    };\n  },\n  components: {\n    Header,\n    Modal\n  },\n  methods: {\n    async acceptOrder() {\n      let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n      // Crea un blob con i dati\n      const blob = new Blob([this.textContent], {\n        type: 'text/plain'\n      });\n\n      // Crea un oggetto File\n      const file = new File([blob], `test.dat`, {\n        type: 'text/plain'\n      }); //Ordine${this.currentDate}\n\n      const formData = new FormData();\n      formData.append('file', file); // Aggiungi il file direttamente\n\n      try {\n        let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/acceptFromFile`, formData, {\n          headers: {\n            'authorization': `Bearer ${token}`,\n            'accept': 'application/json'\n          }\n        });\n        console.log(response);\n        this.modalTitle = \"Order accepted!\";\n        this.modalMessage = \"Your order has been accepted successfully!\";\n      } catch (error) {\n        console.error(\"Failed acceptance, error:\", error);\n        this.modalTitle = \"Order not accepted!\";\n        this.modalMessage = \"Error: \" + error.message;\n      }\n      this.$refs.orderModal.openModal();\n    }\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["Header","Modal","axios","name","data","textContent","modalMessage","modalTitle","components","methods","acceptOrder","token","localStorage","getItem","replace","blob","Blob","type","file","File","formData","FormData","append","response","post","headers","console","log","error","message","$refs","orderModal","openModal","mounted","userId","$router","push"],"sources":["/home/ilaria/kanbanapp/src/components/Accept.vue"],"sourcesContent":["<template>\n    <Header />\n    <div class=\"container my-3\" style=\"min-width: 720px; max-width: 900px;\">\n        <div class=\"text-center mb-4\">\n            <Modal ref=\"orderModal\" modalId=\"orderModal\" :title=\"modalTitle\">\n                <p>{{ modalMessage }}</p>\n            </Modal>\n            <h2 class=\"fw-bold\">Accept Order</h2>\n            <p class=\"fs-5\">Qui puoi accettare l'ordine!</p>\n        </div>\n        <ul class=\"list-unstyled mb-4\">\n            <li>&bull; Collega il lettore di barcode al dispositivo tramite Bluetooth.</li>\n            <li>&bull; Posizionati nella casella di testo sottostante per cominciare a inserire i barcode degli articoli da accettare.</li>\n            <li>&bull; Leggi i barcode con il dispositivo collegato (verranno automaticamente inseriti nella casella di testo).</li>\n            <li>&bull; Una volta terminato l'inserimento dei codici clicca su <strong>'Accept'</strong> per accetare l'ordine!</li>\n        </ul>\n        <div class=\"mb-4\">\n            <textarea class=\"form-control\" rows=\"10\" v-model=\"textContent\" placeholder=\"Write here...\"></textarea>\n        </div>\n        <div class=\"d-flex justify-content-center gap-3\" style=\"height: 10%;\">\n            <button id=\"accept\" class=\"btn btn-primary px-4 w-25 fs-3\" v-on:click=\"acceptOrder\">Accept</button>\n            <button id=\"reset\" class=\"btn btn-primary px-4 w-25 fs-3 fs-ms-4\" \n            v-on:click=\"this.textContent=''\" title=\"Cancella tutti i codici inseriti\">Reset</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport Modal from './Modal.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Accept',\n    data() {\n        return {\n            textContent: '', // Contenuto del file di testo\n            //currentDate: new Date().toLocaleDateString() // Formatta la data\n            modalMessage: \"\", // Stato per il messaggio del Modale\n            modalTitle: \"\",   // Stato per il titolo del Modale\n        };\n    },\n    components: {\n        Header,\n        Modal\n    },\n    methods: {\n        async acceptOrder() {\n            let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n            // Crea un blob con i dati\n            const blob = new Blob([this.textContent], { type: 'text/plain' });\n\n            // Crea un oggetto File\n            const file = new File([blob], `test.dat`, { type: 'text/plain' }); //Ordine${this.currentDate}\n\n            const formData = new FormData();\n            formData.append('file', file); // Aggiungi il file direttamente\n\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/acceptFromFile`, formData, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n\n                console.log(response);\n                this.modalTitle = \"Order accepted!\";\n                this.modalMessage = \"Your order has been accepted successfully!\";\n\n            } catch (error) {\n                console.error(\"Failed acceptance, error:\", error);\n                this.modalTitle = \"Order not accepted!\";\n                this.modalMessage = \"Error: \" + error.message;\n            }\n            this.$refs.orderModal.openModal();\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n}\n</script>"],"mappings":";AA4BA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,aAAa;AAC/B,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,EAAE;MAAE;MACjB;MACAC,YAAY,EAAE,EAAE;MAAE;MAClBC,UAAU,EAAE,EAAE,CAAI;IACtB,CAAC;EACL,CAAC;EACDC,UAAU,EAAE;IACRR,MAAM;IACNC;EACJ,CAAC;EACDQ,OAAO,EAAE;IACL,MAAMC,WAAWA,CAAA,EAAG;MAChB,IAAIC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;;MAE7D;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC,IAAI,CAACX,WAAW,CAAC,EAAE;QAAEY,IAAI,EAAE;MAAa,CAAC,CAAC;;MAEjE;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACJ,IAAI,CAAC,EAAE,UAAU,EAAE;QAAEE,IAAI,EAAE;MAAa,CAAC,CAAC,EAAE;;MAEnE,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC,EAAE;;MAE/B,IAAI;QACA,IAAIK,QAAO,GAAI,MAAMrB,KAAK,CAACsB,IAAI,CAAC,2EAA2E,EAAEJ,QAAQ,EAAE;UACnHK,OAAO,EAAE;YACL,eAAe,EAAE,UAAUd,KAAK,EAAE;YAClC,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QAEFe,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrB,IAAI,CAAChB,UAAS,GAAI,iBAAiB;QACnC,IAAI,CAACD,YAAW,GAAI,4CAA4C;MAEpE,EAAE,OAAOsB,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAI,CAACrB,UAAS,GAAI,qBAAqB;QACvC,IAAI,CAACD,YAAW,GAAI,SAAQ,GAAIsB,KAAK,CAACC,OAAO;MACjD;MACA,IAAI,CAACC,KAAK,CAACC,UAAU,CAACC,SAAS,CAAC,CAAC;IACrC;EACJ,CAAC;EACD;EACAC,OAAOA,CAAA,EAAG;IACN,IAAIC,MAAK,GAAItB,YAAY,CAACC,OAAO,CAAC,IAAI;IACtC,IAAIqB,MAAK,IAAK,IAAI,EAAE;MAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEjC,IAAI,EAAE;MAAQ,CAAC;IACvC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}