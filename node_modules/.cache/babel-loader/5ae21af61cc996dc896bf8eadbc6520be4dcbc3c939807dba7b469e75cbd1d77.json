{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, withCtx as _withCtx, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container my-3\",\n  style: {\n    \"max-width\": \"900px\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"text-center mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"fs-5\"\n};\nconst _hoisted_4 = {\n  class: \"mb-4\"\n};\nconst _hoisted_5 = {\n  class: \"d-flex justify-content-center gap-3\",\n  style: {\n    \"height\": \"10%\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  const _component_Modal = _resolveComponent(\"Modal\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _cache[5] || (_cache[5] = _createElementVNode(\"div\", {\n    class: \"d-flex justify-content-start px-4\"\n  }, [_createElementVNode(\"a\", {\n    href: \"javascript:history.back()\"\n  }, [_createElementVNode(\"i\", {\n    class: \"bi bi-chevron-left fs-3\",\n    style: {\n      \"color\": \"#022970\"\n    }\n  })])], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_Modal, {\n    ref: \"orderModal\",\n    modalId: \"orderModal\",\n    title: $data.modalTitle\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"p\", null, _toDisplayString($data.modalMessage), 1 /* TEXT */)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\"]), _cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    class: \"fw-bold\"\n  }, \"Accept an order\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_3, \"Here you can accept the order from \" + _toDisplayString(this.customer.name), 1 /* TEXT */)]), _cache[4] || (_cache[4] = _createElementVNode(\"ul\", {\n    class: \"list-unstyled mb-4\"\n  }, [_createElementVNode(\"li\", null, \"• Connect the barcode reader to your device via Bluetooth.\"), _createElementVNode(\"li\", null, \"• Position yourself in the text box below to start entering the barcodes of the items to be accepted.\"), _createElementVNode(\"li\", null, \"• Read barcodes with the connected device (they will be automatically inserted into the text box).\"), _createElementVNode(\"li\", null, [_createTextVNode(\"• Once you have finished entering the codes click on \"), _createElementVNode(\"strong\", null, \"'Accept'\"), _createTextVNode(\" to accept the order!\")])], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"textarea\", {\n    class: \"form-control\",\n    rows: \"10\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.textContent = $event),\n    placeholder: \"Write here...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.textContent]])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    id: \"accept\",\n    class: \"btn btn-primary px-4 w-50 fs-3 mb-3\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.acceptOrder && $options.acceptOrder(...args))\n  }, \"Accept\"), _createElementVNode(\"button\", {\n    id: \"reset\",\n    class: \"btn btn-primary px-4 w-50 fs-3 mb-3\",\n    onClick: _cache[2] || (_cache[2] = $event => this.textContent = ''),\n    title: \"Cancella tutti i codici inseriti\"\n  }, \"Delete all\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","style","_createElementBlock","_Fragment","_createVNode","_component_Header","_createElementVNode","href","_hoisted_1","_hoisted_2","_component_Modal","ref","modalId","title","$data","modalTitle","default","_withCtx","_toDisplayString","modalMessage","_","_hoisted_3","customer","name","_createTextVNode","_hoisted_4","rows","_cache","$event","textContent","placeholder","_hoisted_5","id","onClick","args","$options","acceptOrder"],"sources":["/home/ilaria/pwa-demo/src/components/Accept.vue"],"sourcesContent":["<template>\n    <Header />\n    <div class=\"d-flex justify-content-start px-4\">\n        <a href=\"javascript:history.back()\">\n            <i class=\"bi bi-chevron-left fs-3\" style=\"color: #022970\"></i>\n        </a>\n    </div>\n    <div class=\"container my-3\" style=\"max-width: 900px;\">\n        <div class=\"text-center mb-4\">\n            <Modal ref=\"orderModal\" modalId=\"orderModal\" :title=\"modalTitle\">\n                <p>{{ modalMessage }}</p>\n            </Modal>\n            <h2 class=\"fw-bold\">Accept an order</h2>\n            <p class=\"fs-5\">Here you can accept the order from {{ this.customer.name }}</p>\n        </div>\n        <ul class=\"list-unstyled mb-4\">\n            <li>&bull; Connect the barcode reader to your device via Bluetooth.</li>\n            <li>&bull; Position yourself in the text box below to start entering the barcodes of the items to be accepted.</li>\n            <li>&bull; Read barcodes with the connected device (they will be automatically inserted into the text box).</li>\n            <li>&bull; Once you have finished entering the codes click on <strong>'Accept'</strong> to accept the order!</li>\n        </ul>\n        <div class=\"mb-4\">\n            <textarea class=\"form-control\" rows=\"10\" v-model=\"textContent\" placeholder=\"Write here...\"></textarea>\n        </div>\n        <div class=\"d-flex justify-content-center gap-3\" style=\"height: 10%;\">\n            <button id=\"accept\" class=\"btn btn-primary px-4 w-50 fs-3 mb-3\" v-on:click=\"acceptOrder\">Accept</button>\n            <button id=\"reset\" class=\"btn btn-primary px-4 w-50 fs-3 mb-3\" v-on:click=\"this.textContent = ''\"\n                title=\"Cancella tutti i codici inseriti\">Delete all</button>\n        </div>\n    </div>\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport Modal from './Modal.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Accept',\n    data() {\n        return {\n            textContent: '', // Contenuto del file di testo\n            //currentDate: new Date().toLocaleDateString() // Formatta la data\n            modalMessage: \"\", // Stato per il messaggio del Modale\n            modalTitle: \"\",   // Stato per il titolo del Modale\n            customer: [],\n        };\n    },\n    components: {\n        Header,\n        Modal\n    },\n    methods: {\n        async acceptOrder() {\n            let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n            // Crea un blob con i dati\n            const blob = new Blob([this.textContent], { type: 'text/plain' });\n\n            // Crea un oggetto File\n            const file = new File([blob], `test.dat`, { type: 'text/plain' }); //Ordine${this.currentDate}\n\n            const formData = new FormData();\n            formData.append('file', file); // Aggiungi il file direttamente\n\n            try {\n                let response = await axios.get('http://localhost:3000/order_accepted');\n\n                console.log(response);\n                this.modalTitle = \"Order accepted accettato!\";\n                this.modalMessage = \"Your order has been accepeted!\";\n\n            } catch (error) {\n                console.error(\"Failed acceptance, error:\", error);\n                this.modalTitle = \"Order not accepted!\";\n                this.modalMessage = \"Errore: \" + error.message;\n            }\n            this.$refs.orderModal.openModal();\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        this.customer = JSON.parse(localStorage.getItem('selectedCustomer'));\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n}\n</script>"],"mappings":";;EAOSA,KAAK,EAAC,gBAAgB;EAACC,KAAyB,EAAzB;IAAA;EAAA;;;EACnBD,KAAK,EAAC;AAAkB;;EAKtBA,KAAK,EAAC;AAAM;;EAQdA,KAAK,EAAC;AAAM;;EAGZA,KAAK,EAAC,qCAAqC;EAACC,KAAoB,EAApB;IAAA;EAAA;;;;;uBAxBzDC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAUC,iBAAA,G,0BACVC,mBAAA,CAIM;IAJDN,KAAK,EAAC;EAAmC,IAC1CM,mBAAA,CAEI;IAFDC,IAAI,EAAC;EAA2B,IAC/BD,mBAAA,CAA8D;IAA3DN,KAAK,EAAC,yBAAyB;IAACC,KAAsB,EAAtB;MAAA;IAAA;6BAG3CK,mBAAA,CAsBM,OAtBNE,UAsBM,GArBFF,mBAAA,CAMM,OANNG,UAMM,GALFL,YAAA,CAEQM,gBAAA;IAFDC,GAAG,EAAC,YAAY;IAACC,OAAO,EAAC,YAAY;IAAEC,KAAK,EAAEC,KAAA,CAAAC;;IATjEC,OAAA,EAAAC,QAAA,CAUgB,MAAyB,CAAzBX,mBAAA,CAAyB,WAAAY,gBAAA,CAAnBJ,KAAA,CAAAK,YAAY,iB;IAVlCC,CAAA;0DAYYd,mBAAA,CAAwC;IAApCN,KAAK,EAAC;EAAS,GAAC,iBAAe,sBACnCM,mBAAA,CAA+E,KAA/Ee,UAA+E,EAA/D,qCAAmC,GAAAH,gBAAA,MAAQI,QAAQ,CAACC,IAAI,iB,6BAE5EjB,mBAAA,CAKK;IALDN,KAAK,EAAC;EAAoB,IAC1BM,mBAAA,CAAwE,YAApE,4DAA+D,GACnEA,mBAAA,CAAmH,YAA/G,uGAA0G,GAC9GA,mBAAA,CAAgH,YAA5G,oGAAuG,GAC3GA,mBAAA,CAAiH,aAnB7HkB,gBAAA,CAmBgB,uDAA0D,GAAAlB,mBAAA,CAAyB,gBAAjB,UAAQ,GAnB1FkB,gBAAA,CAmBmG,uBAAqB,E,wBAEhHlB,mBAAA,CAEM,OAFNmB,UAEM,G,gBADFnB,mBAAA,CAAsG;IAA5FN,KAAK,EAAC,cAAc;IAAC0B,IAAI,EAAC,IAAI;IAtBpD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsB8Dd,KAAA,CAAAe,WAAW,GAAAD,MAAA;IAAEE,WAAW,EAAC;iDAAzBhB,KAAA,CAAAe,WAAW,E,KAEjEvB,mBAAA,CAIM,OAJNyB,UAIM,GAHFzB,mBAAA,CAAwG;IAAhG0B,EAAE,EAAC,QAAQ;IAAChC,KAAK,EAAC,qCAAqC;IAAMiC,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,QAAM,GAC/F5B,mBAAA,CACgE;IADxD0B,EAAE,EAAC,OAAO;IAAChC,KAAK,EAAC,qCAAqC;IAAMiC,OAAK,EAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAAOC,WAAW;IACvFhB,KAAK,EAAC;KAAmC,YAAU,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}