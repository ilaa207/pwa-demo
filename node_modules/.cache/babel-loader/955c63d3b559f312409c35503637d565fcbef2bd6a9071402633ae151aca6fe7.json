{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"newOrder\"\n};\nconst _hoisted_2 = {\n  class: \"send\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createElementVNode(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createStaticVNode(\"<h2>New Order</h2><p>Benvenuto nella sezione nuovo ordine! Di seguito potrai trovare i passi per completare il tuo ordine:</p><ul><li><p>Collega il lettore di barcode al dispositivo tramite Bluetooth.</p></li><li><p>Una volta collegato il lettore, posizionati nella casella di testo sottostante per cominciare a inserire l&#39;ordine.</p></li><li><p>Spara i barcode (verranno automaticamente inseriti nella casella di testo)</p></li><li><p>Controlla sempre che sia stato inserito il barcode corretto!</p></li><li><p>Una volta terminato l&#39;inserimento dei codici clicca su &#39;Send&#39; per inviare il tuo ordine!</p></li></ul>\", 3)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.textContent = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => _ctx.update && _ctx.update(...args), [\"onEnter\"])),\n    placeholder: \"Write here...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.textContent]])]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sendOrder && $options.sendOrder(...args))\n  }, \"Send\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_Header","_createElementVNode","_hoisted_1","_createStaticVNode","_cache","$event","$data","textContent","onKeyup","_withKeys","args","_ctx","update","placeholder","_hoisted_2","onClick","$options","sendOrder"],"sources":["/home/ilaria/kanbanapp/src/components/Order.vue"],"sourcesContent":["<template>\n    <Header />\n    <div class=\"newOrder\">\n        <h2>New Order</h2>\n        <p>Benvenuto nella sezione nuovo ordine! Di seguito potrai trovare i passi per completare il tuo ordine:</p>\n        <ul>\n            <li>    \n                <p>Collega il lettore di barcode al dispositivo tramite Bluetooth.</p>\n            </li>\n            <li>\n                <p>Una volta collegato il lettore, posizionati nella casella di testo sottostante per cominciare a inserire l'ordine.</p>\n            </li>\n            <li>\n                <p>Spara i barcode (verranno automaticamente inseriti nella casella di testo)</p>\n            </li>\n            <li>\n                <p>Controlla sempre che sia stato inserito il barcode corretto!</p>\n            </li>\n            <li>\n                <p>Una volta terminato l'inserimento dei codici clicca su 'Send' per inviare il tuo ordine!</p>\n            </li>\n        </ul>\n        <textarea v-model=\"textContent\" @keyup.onEnter=\"update\" placeholder=\"Write here...\"></textarea>\n    </div>\n    <div class=\"send\">\n        <button v-on:click=\"sendOrder\">Send</button>\n    </div>\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Order',\n    data() {\n        return {\n            textContent: '', // Contenuto del file di testo\n            //currentDate: new Date().toLocaleDateString() // Formatta la data\n        };\n    },\n    components: {\n        Header\n    },\n    methods: {\n    async sendOrder() {\n        let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n        // Crea un blob con i dati\n        const blob = new Blob([this.textContent], { type: 'text/plain' });\n\n        // Crea un oggetto File\n        const file = new File([blob], `test.dat`, { type: 'text/plain' }); //Ordine${this.currentDate}\n\n        const formData = new FormData();\n        formData.append('file', file); // Aggiungi il file direttamente\n\n        try {\n            let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, formData, {\n                headers: {\n                    'authorization': `Bearer ${token}`,\n                    'accept': 'application/json',\n                },\n            });\n\n            console.log(response);\n            alert(\"Order sent!\");\n            \n        } catch (error) {\n            console.error(\"Sending failed, error:\", error);\n            alert(\"Order not sent!\");\n        }\n    }\n},\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non Ã¨ loggato, rimando alla pagina di login\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n}\n</script>\n"],"mappings":";;EAESA,KAAK,EAAC;AAAU;;EAsBhBA,KAAK,EAAC;AAAM;;;uBAxBrBC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAqBM,OArBNC,UAqBM,G,0BAvBVC,kBAAA,goB,gBAsBQF,mBAAA,CAA+F;IAtBvG,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsB2BC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAtB9CK,SAAA,KAAAC,IAAA,KAsBwDC,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;IAAEG,WAAW,EAAC;iEAAjDP,KAAA,CAAAC,WAAW,E,KAElCN,mBAAA,CAEM,OAFNa,UAEM,GADFb,mBAAA,CAA4C;IAA/Bc,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEM,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAP,IAAA,CAAS;KAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}