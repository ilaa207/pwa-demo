{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Client',\n  data() {\n    return {\n      costumers: []\n    };\n  },\n  components: {\n    Header\n  },\n  methods: {\n    async searchCostumers() {\n      let token = localStorage.getItem('token').replace(/\"/g, '');\n      try {\n        let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/index`, {\n          headers: {\n            'authorization': `Bearer ${token}`,\n            'accept': 'application/json'\n          }\n        });\n        console.log(response);\n        localStorage.setItem(\"costumers\", JSON.stringify(response.data.customers));\n        this.costumers = response.data.customers;\n      } catch (error) {\n        console.warn(\"Error: \", error);\n      }\n    },\n    async choose() {\n      localStorage.setItem(\"customerId\", customer.id);\n      localStorage.setItem(\"customerName\", customer.nome_azienda);\n      this.$router.push({\n        name: 'Home'\n      });\n    }\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('token');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n    this.searchCostumers();\n  }\n};","map":{"version":3,"names":["Header","axios","name","data","costumers","components","methods","searchCostumers","token","localStorage","getItem","replace","response","get","headers","console","log","setItem","JSON","stringify","customers","error","warn","choose","customer","id","nome_azienda","$router","push","mounted","userId"],"sources":["/home/ilaria/kanbanapp/src/components/Client.vue"],"sourcesContent":["<template>\n    <Header />\n    <div id=\"display-clients\" class=\"d-flex flex-column\">\n        <ul class=\"list-group list-group-flush\">\n            <li v-for=\"costumer in costumers\" :key=\"costumer.id\" class=\"client-list list-group-item\">\n                <a @click=\"choose\" class=\"text-decoration-none\">\n                    {{ costumer.nome_azienda }}\n                    <i class=\"bi bi-chevron-right\"></i>\n                </a>\n\n            </li>\n        </ul>\n    </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Client',\n    data() {\n        return {\n            costumers: [],\n        };\n    },\n    components: {\n        Header\n    },\n    methods: {\n        async searchCostumers() {\n            let token = localStorage.getItem('token').replace(/\"/g, '');\n            try {\n                let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/index`, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n                console.log(response);\n                localStorage.setItem(\"costumers\", JSON.stringify(response.data.customers));\n                this.costumers = response.data.customers;\n            } catch (error) {\n                console.warn(\"Error: \", error)\n            }\n        },\n        async choose(){\n            localStorage.setItem(\"customerId\", customer.id);\n            localStorage.setItem(\"customerName\", customer.nome_azienda);\n            this.$router.push({ name: 'Home' });\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        let userId = localStorage.getItem('token');\n        \n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n        this.searchCostumers();\n\n\n    }\n}\n</script>"],"mappings":";AAiBA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAO,EAAE;IACL,MAAMC,eAAeA,CAAA,EAAG;MACpB,IAAIC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAC3D,IAAI;QACA,IAAIC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,2EAA2E,EAAE;UACxGC,OAAO,EAAE;YACL,eAAe,EAAE,UAAUN,KAAK,EAAE;YAClC,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QACFO,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrBH,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACT,IAAI,CAACiB,SAAS,CAAC,CAAC;QAC1E,IAAI,CAAChB,SAAQ,GAAIQ,QAAQ,CAACT,IAAI,CAACiB,SAAS;MAC5C,EAAE,OAAOC,KAAK,EAAE;QACZN,OAAO,CAACO,IAAI,CAAC,SAAS,EAAED,KAAK;MACjC;IACJ,CAAC;IACD,MAAME,MAAMA,CAAA,EAAE;MACVd,YAAY,CAACQ,OAAO,CAAC,YAAY,EAAEO,QAAQ,CAACC,EAAE,CAAC;MAC/ChB,YAAY,CAACQ,OAAO,CAAC,cAAc,EAAEO,QAAQ,CAACE,YAAY,CAAC;MAC3D,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAE1B,IAAI,EAAE;MAAO,CAAC,CAAC;IACvC;EACJ,CAAC;EACD;EACA2B,OAAOA,CAAA,EAAG;IACN,IAAIC,MAAK,GAAIrB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE1C,IAAIoB,MAAK,IAAK,IAAI,EAAE;MAChB,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC;QAAE1B,IAAI,EAAE;MAAQ,CAAC;IACvC;IACA,IAAI,CAACK,eAAe,CAAC,CAAC;EAG1B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}