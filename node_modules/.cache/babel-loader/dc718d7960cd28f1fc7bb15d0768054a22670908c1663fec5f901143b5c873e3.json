{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Order',\n  data() {\n    return {\n      textContent: '' // Contenuto del file di testo\n      //currentDate: new Date().toLocaleDateString() // Formatta la data\n    };\n  },\n  components: {\n    Header\n  },\n  methods: {\n    async sendOrder() {\n      let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n      // Crea un blob con i dati\n      const blob = new Blob([this.textContent], {\n        type: 'text/plain'\n      });\n\n      // Crea un oggetto File\n      const file = new File([blob], `test.dat`, {\n        type: 'text/plain'\n      }); //Ordine${this.currentDate}\n\n      const formData = new FormData();\n      formData.append('file', file); // Aggiungi il file direttamente\n\n      try {\n        let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, formData, {\n          headers: {\n            'authorization': `Bearer ${token}`,\n            'accept': 'application/json'\n          }\n        });\n        var popup = document.getElementById(\"popup\");\n\n        // Ottieni il bottone che apre il pop-up\n        var btn = document.getElementById(\"openPopup\");\n\n        // Ottieni l'elemento <span> che chiude il pop-up\n        var span = document.getElementById(\"closePopup\");\n\n        // Quando l'utente clicca sul bottone, apri il pop-up\n        btn.onclick = function () {\n          popup.style.display = \"block\";\n        };\n\n        // Quando l'utente clicca sul <span> (x), chiudi il pop-up\n        span.onclick = function () {\n          popup.style.display = \"none\";\n        };\n\n        // Quando l'utente clicca al di fuori del pop-up, chiudilo\n        window.onclick = function (event) {\n          if (event.target == popup) {\n            popup.style.display = \"none\";\n          }\n        };\n        this.textContent = '';\n        console.log(response);\n        alert(\"Order sent!\");\n      } catch (error) {\n        console.error(\"Sending failed, error:\", error);\n        alert(\"Order not sent!\");\n      }\n    }\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["Header","axios","name","data","textContent","components","methods","sendOrder","token","localStorage","getItem","replace","blob","Blob","type","file","File","formData","FormData","append","response","post","headers","popup","document","getElementById","btn","span","onclick","style","display","window","event","target","console","log","alert","error","mounted","userId","$router","push"],"sources":["/home/ilaria/kanbanapp/src/components/Order.vue"],"sourcesContent":["<template>\n    <Header />\n    <div id=\"popup\" class=\"popup\">\n        <div class=\"popup-content\">\n            <span class=\"close\" id=\"closePopup\">&times;</span>\n            <h2>Order sent!</h2>\n        </div>\n    </div>\n    <div class=\"editor\">\n        <h2>New Order</h2>\n        <h3>Benvenuto nella sezione nuovo ordine!</h3>\n        <ul>\n            <li>Collega il lettore di barcode al dispositivo tramite Bluetooth.</li>\n            <li>Una volta collegato il lettore, posizionati nella casella di testo sottostante per cominciare a inserire\n                l'ordine.</li>\n            <li>Leggi i barcode con il dispositivo collegato (verranno automaticamente inseriti nella casella di testo)\n            </li>\n            <li>Controlla sempre che sia stato inserito il barcode corretto!</li>\n            <li>Una volta terminato l'inserimento dei codici clicca su 'Send' per inviare il tuo ordine!</li>\n        </ul>\n        <textarea v-model=\"textContent\" placeholder=\"Write here...\"></textarea>\n        <div class=\"send\">\n            <button v-on:click=\"sendOrder\">Send</button>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Order',\n    data() {\n        return {\n            textContent: '', // Contenuto del file di testo\n            //currentDate: new Date().toLocaleDateString() // Formatta la data\n        };\n    },\n    components: {\n        Header\n    },\n    methods: {\n        async sendOrder() {\n            let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n            // Crea un blob con i dati\n            const blob = new Blob([this.textContent], { type: 'text/plain' });\n\n            // Crea un oggetto File\n            const file = new File([blob], `test.dat`, { type: 'text/plain' }); //Ordine${this.currentDate}\n\n            const formData = new FormData();\n            formData.append('file', file); // Aggiungi il file direttamente\n\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, formData, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n                \n\n\n\n\n                var popup = document.getElementById(\"popup\");\n\n// Ottieni il bottone che apre il pop-up\nvar btn = document.getElementById(\"openPopup\");\n\n// Ottieni l'elemento <span> che chiude il pop-up\nvar span = document.getElementById(\"closePopup\");\n\n// Quando l'utente clicca sul bottone, apri il pop-up\nbtn.onclick = function() {\n    popup.style.display = \"block\";\n}\n\n// Quando l'utente clicca sul <span> (x), chiudi il pop-up\nspan.onclick = function() {\n    popup.style.display = \"none\";\n}\n\n// Quando l'utente clicca al di fuori del pop-up, chiudilo\nwindow.onclick = function(event) {\n    if (event.target == popup) {\n        popup.style.display = \"none\";\n    }\n}\n\n\n\n\n\n\n\n                this.textContent = '';\n                console.log(response);\n                alert(\"Order sent!\");\n\n            } catch (error) {\n                console.error(\"Sending failed, error:\", error);\n                alert(\"Order not sent!\");\n            }\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n}\n</script>\n\n<style>\nbody {\n    font-family: Arial, sans-serif;\n}\n\n.popup {\n    display: none; /* Nascondi il pop-up di default */\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5); /* Sfondo semi-trasparente */\n}\n\n.popup-content {\n    background-color: #fff;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 80%;\n    max-width: 500px;\n}\n\n.close {\n    color: #aaa;\n    float: right;\n    font-size: 28px;\n    font-weight: bold;\n}\n\n.close:hover,\n.close:focus {\n    color: black;\n    text-decoration: none;\n    cursor: pointer;\n}\n</style>"],"mappings":";AA6BA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,EAAE,CAAE;MACjB;IACJ,CAAC;EACL,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAO,EAAE;IACL,MAAMC,SAASA,CAAA,EAAG;MACd,IAAIC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;;MAE7D;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC,IAAI,CAACT,WAAW,CAAC,EAAE;QAAEU,IAAI,EAAE;MAAa,CAAC,CAAC;;MAEjE;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACJ,IAAI,CAAC,EAAE,UAAU,EAAE;QAAEE,IAAI,EAAE;MAAa,CAAC,CAAC,EAAE;;MAEnE,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC,EAAE;;MAE/B,IAAI;QACA,IAAIK,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,4EAA4E,EAAEJ,QAAQ,EAAE;UACpHK,OAAO,EAAE;YACL,eAAe,EAAE,UAAUd,KAAK,EAAE;YAClC,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QAMF,IAAIe,KAAI,GAAIC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;;QAE5D;QACA,IAAIC,GAAE,GAAIF,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;;QAE9C;QACA,IAAIE,IAAG,GAAIH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;;QAEhD;QACAC,GAAG,CAACE,OAAM,GAAI,YAAW;UACrBL,KAAK,CAACM,KAAK,CAACC,OAAM,GAAI,OAAO;QACjC;;QAEA;QACAH,IAAI,CAACC,OAAM,GAAI,YAAW;UACtBL,KAAK,CAACM,KAAK,CAACC,OAAM,GAAI,MAAM;QAChC;;QAEA;QACAC,MAAM,CAACH,OAAM,GAAI,UAASI,KAAK,EAAE;UAC7B,IAAIA,KAAK,CAACC,MAAK,IAAKV,KAAK,EAAE;YACvBA,KAAK,CAACM,KAAK,CAACC,OAAM,GAAI,MAAM;UAChC;QACJ;QAQgB,IAAI,CAAC1B,WAAU,GAAI,EAAE;QACrB8B,OAAO,CAACC,GAAG,CAACf,QAAQ,CAAC;QACrBgB,KAAK,CAAC,aAAa,CAAC;MAExB,EAAE,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CD,KAAK,CAAC,iBAAiB,CAAC;MAC5B;IACJ;EACJ,CAAC;EACD;EACAE,OAAOA,CAAA,EAAG;IACN,IAAIC,MAAK,GAAI9B,YAAY,CAACC,OAAO,CAAC,IAAI;IACtC,IAAI6B,MAAK,IAAK,IAAI,EAAE;MAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEvC,IAAI,EAAE;MAAQ,CAAC;IACvC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}