{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list-group list-group-flush\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"list-group-item\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createElementVNode(\"h1\", null, \"Ordine n° \" + _toDisplayString(this.orderId), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id,\n      class: \"client-list list-group-item\"\n    }, [_createTextVNode(\" ID articolo: \" + _toDisplayString(item.id) + \" \", 1 /* TEXT */), _createElementVNode(\"ol\", null, [_createTextVNode(\" Codice cliente: \" + _toDisplayString(item.cod_articolo_cliente) + \" \", 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" Codice fornitore: \" + _toDisplayString(item.cod_articolo_fornitore) + \" \", 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" N. vaschette: \" + _toDisplayString(item.n_vaschette) + \" \", 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" Qta. evasa: \" + _toDisplayString(item.qta_evasa) + \" \", 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" Ripiano: \" + _toDisplayString(item.ripiano) + \" \", 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" Scaffale: \" + _toDisplayString(item.scaffale) + \" \", 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\" Descrizione: \" + _toDisplayString(item.descrizione), 1 /* TEXT */), _cache[6] || (_cache[6] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))])]);\n  }), 128 /* KEYED_FRAGMENT */)), $data.items.length == 0 ? (_openBlock(), _createElementBlock(\"li\", _hoisted_2, \"Nessun elemento trovato.\")) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_Fragment","_createVNode","_component_Header","_createElementVNode","_toDisplayString","orderId","_hoisted_1","_renderList","$data","items","item","id","_createTextVNode","cod_articolo_cliente","cod_articolo_fornitore","n_vaschette","qta_evasa","ripiano","scaffale","descrizione","length","_hoisted_2","_createCommentVNode"],"sources":["/home/ilaria/kanbanapp/src/components/OpenOrder.vue"],"sourcesContent":["<template>\n    <Header />\n    <h1>Ordine n° {{ this.orderId }}</h1>\n    <ul class=\"list-group list-group-flush\">\n        <li v-for=\"item in items\" :key=\"item.id\" class=\"client-list list-group-item\">\n            ID articolo: {{ item.id }}\n            <ol>\n                Codice cliente: {{ item.cod_articolo_cliente }} <br>\n                Codice fornitore: {{ item.cod_articolo_fornitore }} <br>\n                N. vaschette: {{ item.n_vaschette }} <br>\n                Qta. evasa: {{ item.qta_evasa }} <br>\n                Ripiano: {{ item.ripiano }} <br>\n                Scaffale: {{ item.scaffale }} <br>\n                Descrizione: {{ item.descrizione }}<br> \n\n            </ol>\n        </li>\n\n        <li v-if=\"items.length == 0\" class=\"list-group-item\">Nessun elemento trovato.</li>\n    </ul>\n</template>\n\n<script>\nimport Header from './Header.vue';\nexport default {\n    name: 'OpenOrder',\n    data() {\n        return {\n            orderId: null,\n            items: [],\n        };\n    },\n    components: {\n        Header,\n    },\n    methods: {\n        \n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        this.items = JSON.parse(this.$route.params.items);\n        console.log(\"Items:\", this.items);\n        this.orderId = this.$route.params.orderId;\n        \n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n}\n</script>\n"],"mappings":";;EAGQA,KAAK,EAAC;AAA6B;;EAH3CC,GAAA;EAkBqCD,KAAK,EAAC;;;;uBAlB3CE,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAAqC,YAAjC,YAAU,GAAAC,gBAAA,MAAQC,OAAO,kBAC7BF,mBAAA,CAgBK,MAhBLG,UAgBK,I,kBAfDP,mBAAA,CAYKC,SAAA,QAhBbO,WAAA,CAI2BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfX,mBAAA,CAYK;MAZsBD,GAAG,EAAEY,IAAI,CAACC,EAAE;MAAEd,KAAK,EAAC;QAJvDe,gBAAA,CAIqF,gBAC5D,GAAAR,gBAAA,CAAGM,IAAI,CAACC,EAAE,IAAG,GAC1B,iBAAAR,mBAAA,CASK,aAfjBS,gBAAA,CAMgB,mBACgB,GAAAR,gBAAA,CAAGM,IAAI,CAACG,oBAAoB,IAAG,GAAC,iB,0BAAAV,mBAAA,CAAI,sCAPpES,gBAAA,CAOoE,qBAClC,GAAAR,gBAAA,CAAGM,IAAI,CAACI,sBAAsB,IAAG,GAAC,iB,0BAAAX,mBAAA,CAAI,sCARxES,gBAAA,CAQwE,iBAC1C,GAAAR,gBAAA,CAAGM,IAAI,CAACK,WAAW,IAAG,GAAC,iB,0BAAAZ,mBAAA,CAAI,sCATzDS,gBAAA,CASyD,eAC7B,GAAAR,gBAAA,CAAGM,IAAI,CAACM,SAAS,IAAG,GAAC,iB,0BAAAb,mBAAA,CAAI,sCAVrDS,gBAAA,CAUqD,YAC5B,GAAAR,gBAAA,CAAGM,IAAI,CAACO,OAAO,IAAG,GAAC,iB,0BAAAd,mBAAA,CAAI,sCAXhDS,gBAAA,CAWgD,aACtB,GAAAR,gBAAA,CAAGM,IAAI,CAACQ,QAAQ,IAAG,GAAC,iB,0BAAAf,mBAAA,CAAI,sCAZlDS,gBAAA,CAYkD,gBACrB,GAAAR,gBAAA,CAAGM,IAAI,CAACS,WAAW,kB,0BAAGhB,mBAAA,CAAI,qC;kCAKrCK,KAAA,CAAAC,KAAK,CAACW,MAAM,S,cAAtBrB,mBAAA,CAAkF,MAAlFsB,UAAkF,EAA7B,0BAAwB,KAlBrFC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}