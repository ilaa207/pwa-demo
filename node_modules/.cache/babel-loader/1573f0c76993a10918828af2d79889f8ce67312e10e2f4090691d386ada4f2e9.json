{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Ordine',\n  data() {\n    return {\n      textContent: '' // Contenuto del file di testo\n      //currentDate: new Date().toLocaleDateString() // Formatta la data\n    };\n  },\n  components: {\n    Header\n  },\n  methods: {\n    async acceptOrder() {\n      let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n      // Crea un blob con i dati\n      const blob = new Blob([this.textContent], {\n        type: 'text/plain'\n      });\n\n      // Crea un oggetto File\n      const file = new File([blob], `test.dat`, {\n        type: 'text/plain'\n      }); //Ordine${this.currentDate}\n\n      const formData = new FormData();\n      formData.append('file', file); // Aggiungi il file direttamente\n\n      try {\n        let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/acceptFromFile`, formData, {\n          headers: {\n            'authorization': `Bearer ${token}`,\n            'accept': 'application/json'\n          }\n        });\n        console.log(response);\n        alert(\"Order accepted!\");\n      } catch (error) {\n        console.error(\"Failed acceptance, error:\", error);\n        alert(\"Order not accepted!\");\n      }\n    }\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["Header","axios","name","data","textContent","components","methods","acceptOrder","token","localStorage","getItem","replace","blob","Blob","type","file","File","formData","FormData","append","response","post","headers","console","log","alert","error","mounted","userId","$router","push"],"sources":["/home/ilaria/kanbanapp/src/components/Accept.vue"],"sourcesContent":["<template>\n    <Header />\n    <div class=\"editor\">\n        <h2>Accept Order</h2>\n        <h3>Benvenuto nella sezione accetta ordine!</h3>\n        <ul>\n            <li>Collega il lettore di barcode al dispositivo tramite Bluetooth.</li>\n            <li>Una volta collegato il lettore, posizionati nella casella di testo sottostante per cominciare a inserire\n                i barcode degli articoli da accettare.</li>\n            <li>Leggi i barcode con il dispositivo collegato (verranno automaticamente inseriti nella casella di testo)\n            </li>\n            <li>Controlla sempre che sia stato inserito il barcode corretto!</li>\n            <li>Una volta terminato l'inserimento dei codici clicca su 'Accept' per accetare l'ordine!</li>\n        </ul>\n        <textarea v-model=\"textContent\" @keyup.onEnter=\"update\" placeholder=\"Write here...\"></textarea>\n        <div class=\"accept\">\n            <button v-on:click=\"acceptOrder\">Accept</button>\n        </div>\n        <div class=\"reset\">\n            <button id=\"reset\" class=\"btn btn-primary\" v-on:click=\"this.textContent=''\">Reset</button>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Ordine',\n    data() {\n        return {\n            textContent: '', // Contenuto del file di testo\n            //currentDate: new Date().toLocaleDateString() // Formatta la data\n        };\n    },\n    components: {\n        Header\n    },\n    methods: {\n        async acceptOrder() {\n            let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n            // Crea un blob con i dati\n            const blob = new Blob([this.textContent], { type: 'text/plain' });\n\n            // Crea un oggetto File\n            const file = new File([blob], `test.dat`, { type: 'text/plain' }); //Ordine${this.currentDate}\n\n            const formData = new FormData();\n            formData.append('file', file); // Aggiungi il file direttamente\n\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/acceptFromFile`, formData, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n\n                console.log(response);\n                alert(\"Order accepted!\");\n\n            } catch (error) {\n                console.error(\"Failed acceptance, error:\", error);\n                alert(\"Order not accepted!\");\n            }\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n}\n</script>\n\n<style>\n.accept button{\n  width: 50%;\n  height: 60px;\n  padding-left: 10px;\n  display: block;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px solid #022970;\n  border-radius: 5px;\n  background: #022970;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 2em;\n}\n.accept button:hover{\n  transition: 0.2s ease-in;\n  background-color: #002390;\n}\n.reset button{\n  float: right;\n  width: 30%;\n  height: 60px;\n  padding-left: 10px;\n  display: block;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-right: 10%;\n  margin-left: 30px;\n  border: 1px solid #be0202;\n  border-radius: 5px;\n  background: #be0202;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 2em;\n}\n.reset button:hover{\n  transition: 0.2s ease-in;\n  background-color: #002390;\n}\n</style>"],"mappings":";AA0BA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,EAAE,CAAE;MACjB;IACJ,CAAC;EACL,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAO,EAAE;IACL,MAAMC,WAAWA,CAAA,EAAG;MAChB,IAAIC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;;MAE7D;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC,IAAI,CAACT,WAAW,CAAC,EAAE;QAAEU,IAAI,EAAE;MAAa,CAAC,CAAC;;MAEjE;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACJ,IAAI,CAAC,EAAE,UAAU,EAAE;QAAEE,IAAI,EAAE;MAAa,CAAC,CAAC,EAAE;;MAEnE,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC,EAAE;;MAE/B,IAAI;QACA,IAAIK,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,2EAA2E,EAAEJ,QAAQ,EAAE;UACnHK,OAAO,EAAE;YACL,eAAe,EAAE,UAAUd,KAAK,EAAE;YAClC,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QAEFe,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrBK,KAAK,CAAC,iBAAiB,CAAC;MAE5B,EAAE,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDD,KAAK,CAAC,qBAAqB,CAAC;MAChC;IACJ;EACJ,CAAC;EACD;EACAE,OAAOA,CAAA,EAAG;IACN,IAAIC,MAAK,GAAInB,YAAY,CAACC,OAAO,CAAC,IAAI;IACtC,IAAIkB,MAAK,IAAK,IAAI,EAAE;MAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAE5B,IAAI,EAAE;MAAQ,CAAC;IACvC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}