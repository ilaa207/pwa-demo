{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withKeys as _withKeys, createElementVNode as _createElementVNode, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"editor\"\n};\nconst _hoisted_2 = {\n  class: \"invia\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.textContent = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => _ctx.update && _ctx.update(...args), [\"onEnter\"])),\n    placeholder: \"Scrivi qui...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, _ctx.textContent]])]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.sendFile && _ctx.sendFile(...args))\n  }, \"Invia ordine\")])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_Header","_createElementVNode","_hoisted_1","_cache","$event","_ctx","textContent","onKeyup","_withKeys","args","update","placeholder","_hoisted_2","onClick","sendFile"],"sources":["/home/ilaria/progettino/src/components/Ordine.vue"],"sourcesContent":["<template >\n    <Header/>\n    <div class=\"editor\">\n        <textarea v-model=\"textContent\"  @keyup.onEnter=\"update\" placeholder=\"Scrivi qui...\"></textarea>\n    </div>\n    <div class=\"invia\">\n        <button v-on:click=\"sendFile\">Invia ordine</button>\n    </div>\n</template>\n\n<script>\nimport Header from './Header.vue';\n    export default {\n        name:'Ordine',\n        data() {\n    return {\n      text: '' // Contenuto del file di testo\n    };\n  },\n        components:{\n            Header\n        },\n        methods: {\n            async sendFile() {\n      // Crea un Blob dal contenuto della textarea\n      const blob = new Blob([this.text], { type: 'text/plain' });\n      // Crea un File dal Blob\n      const file = new File([blob], 'file.dat', { type: 'text/plain' });\n\n      // Crea un FormData e aggiungi il file\n      const formData = new FormData();\n      formData.append('file', file);\n\n      try {\n        // Invia il file all'API\n        const response = await axios.post('https://tuo-api-endpoint.com/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        console.log('File inviato con successo:', response.data);\n      } catch (error) {\n        console.error('Errore durante l\\'invio del file:', error);\n      }\n    }\n  }\n};\n\n        /*async inviaOrdine() {\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, {\n                    textContent: '' // Contenuto del file di testo\n                });\n\n                console.log(response);\n                \n            } catch (error) {\n                console.error(\"Invio non riuscito, errore:\", error);\n            }\n        }\n    },*/\n        //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non Ã¨ loggato, rimando alla pagina di login\n        mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    };\n</script>\n\n"],"mappings":";;EAESA,KAAK,EAAC;AAAQ;;EAGdA,KAAK,EAAC;AAAO;;;uBALtBC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAASC,iBAAA,GACTC,mBAAA,CAEM,OAFNC,UAEM,G,gBADFD,mBAAA,CAAgG;IAHxG,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAG2BC,IAAA,CAAAC,WAAW,GAAAF,MAAA;IAAIG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAH/CK,SAAA,KAAAC,IAAA,KAGyDJ,IAAA,CAAAK,MAAA,IAAAL,IAAA,CAAAK,MAAA,IAAAD,IAAA,CAAM;IAAEE,WAAW,EAAC;iEAAlDN,IAAA,CAAAC,WAAW,E,KAElCL,mBAAA,CAEM,OAFNW,UAEM,GADFX,mBAAA,CAAmD;IAAtCY,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEJ,IAAA,CAAAS,QAAA,IAAAT,IAAA,CAAAS,QAAA,IAAAL,IAAA,CAAQ;KAAE,cAAY,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}