{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport Header from './Header.vue';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      clientId: null,\n      // ID del cliente selezionato\n      clientName: '',\n      // Nome del cliente\n      orders: [] // Lista degli ordini aperti\n    };\n  },\n  components: {\n    Header\n  },\n  methods: {\n    async openOrders() {\n      let token = localStorage.getItem('token').replace(/\"/g, '');\n      try {\n        let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/${this.clientId}/orders`, {\n          headers: {\n            'authorization': `Bearer ${token}`,\n            'accept': 'application/json'\n          }\n        });\n        this.orders = response.data.orders;\n        console.log(response);\n      } catch (error) {\n        console.warn(\"Error: \", error);\n      }\n    }\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n    // Recupera l'ID del cliente dai parametri della route\n    this.clientId = this.$route.params.clientId;\n\n    // Recupera i dati del cliente da localStorage\n    const storedClients = localStorage.getItem('clients');\n    if (storedClients) {\n      const clients = JSON.parse(storedClients);\n      const client = clients.find(c => c.id === this.clientId);\n      if (client) {\n        this.clientName = client.nome_azienda;\n      }\n    }\n\n    // Recupera gli ordini aperti\n    if (this.clientId) {\n      this.openOrders();\n    }\n  }\n};","map":{"version":3,"names":["Header","name","data","clientId","clientName","orders","components","methods","openOrders","token","localStorage","getItem","replace","response","axios","get","headers","console","log","error","warn","mounted","userId","$router","push","$route","params","storedClients","clients","JSON","parse","client","find","c","id","nome_azienda"],"sources":["/home/ilaria/kanbanapp/src/components/Home.vue"],"sourcesContent":["<template>\n  <Header />\n  <div class=\"d-flex flex-column align-items-center px-5 px-ms-4\">\n    <div class=\"d-flex justify-content-center align-items-center\">\n    <h1 class=\"fw-bold mb-4 mt-4\">Welcome back!</h1>\n  </div>\n  <button id=\"actions\" class=\"btn btn-primary py-5 w-100 mb-3 fs-3 fs-sm-1 d-flex justify-content-center align-items-center shadow-lg\" v-on:click=\"this.$router.push({ name: 'Order' })\">New order</button>\n  <button id=\"actions\" class=\"btn btn-primary py-5 w-100 mb-3 fs-3 fs-sm-1 d-flex justify-content-center align-items-center shadow-lg\" v-on:click=\"this.$router.push({ name: 'Accept' })\">Accept an order</button>\n</div>\n\n<div data-spy=\"scroll\" data-target=\"#list-example\" data-offset=\"0\" class=\"scrollspy-example my-5\">\n  <h2 id=\"open-oders\">Open Orders</h2>\n  <p>...</p>\n</div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      clientId: null, // ID del cliente selezionato\n      clientName: '', // Nome del cliente\n      orders: [], // Lista degli ordini aperti\n    };\n},\n  components: {\n    Header\n  },\n  methods: {\n    async openOrders() {\n            let token = localStorage.getItem('token').replace(/\"/g, '');\n            try {\n                let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/${this.clientId}/orders`, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n                this.orders = response.data.orders;\n                console.log(response);\n                \n            } catch (error) {\n                console.warn(\"Error: \", error)\n            }\n        },\n  },\n\n\n\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id')\n    if (userId == null) {\n      this.$router.push({ name: 'Login' })\n    }\n    // Recupera l'ID del cliente dai parametri della route\n    this.clientId = this.$route.params.clientId;\n\n    // Recupera i dati del cliente da localStorage\n    const storedClients = localStorage.getItem('clients');\n    if (storedClients) {\n      const clients = JSON.parse(storedClients);\n      const client = clients.find((c) => c.id === this.clientId);\n      if (client) {\n        this.clientName = client.nome_azienda;\n      }\n    }\n\n    // Recupera gli ordini aperti\n    if (this.clientId) {\n      this.openOrders();\n    }\n  },\n};\n</script>"],"mappings":";;;AAkBA,OAAOA,MAAK,MAAO,cAAc;AACjC,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,IAAI;MAAE;MAChBC,UAAU,EAAE,EAAE;MAAE;MAChBC,MAAM,EAAE,EAAE,CAAE;IACd,CAAC;EACL,CAAC;EACCC,UAAU,EAAE;IACVN;EACF,CAAC;EACDO,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACX,IAAIC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAC3D,IAAI;QACA,IAAIC,QAAO,GAAI,MAAMC,KAAK,CAACC,GAAG,CAAC,uEAAuE,IAAI,CAACZ,QAAQ,SAAS,EAAE;UAC1Ha,OAAO,EAAE;YACL,eAAe,EAAE,UAAUP,KAAK,EAAE;YAClC,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QACF,IAAI,CAACJ,MAAK,GAAIQ,QAAQ,CAACX,IAAI,CAACG,MAAM;QAClCY,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MAEzB,EAAE,OAAOM,KAAK,EAAE;QACZF,OAAO,CAACG,IAAI,CAAC,SAAS,EAAED,KAAK;MACjC;IACJ;EACN,CAAC;EAID;EACAE,OAAOA,CAAA,EAAG;IACR,IAAIC,MAAK,GAAIZ,YAAY,CAACC,OAAO,CAAC,IAAI;IACtC,IAAIW,MAAK,IAAK,IAAI,EAAE;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEvB,IAAI,EAAE;MAAQ,CAAC;IACrC;IACA;IACA,IAAI,CAACE,QAAO,GAAI,IAAI,CAACsB,MAAM,CAACC,MAAM,CAACvB,QAAQ;;IAE3C;IACA,MAAMwB,aAAY,GAAIjB,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACrD,IAAIgB,aAAa,EAAE;MACjB,MAAMC,OAAM,GAAIC,IAAI,CAACC,KAAK,CAACH,aAAa,CAAC;MACzC,MAAMI,MAAK,GAAIH,OAAO,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAC,KAAM,IAAI,CAAC/B,QAAQ,CAAC;MAC1D,IAAI4B,MAAM,EAAE;QACV,IAAI,CAAC3B,UAAS,GAAI2B,MAAM,CAACI,YAAY;MACvC;IACF;;IAEA;IACA,IAAI,IAAI,CAAChC,QAAQ,EAAE;MACjB,IAAI,CAACK,UAAU,CAAC,CAAC;IACnB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}