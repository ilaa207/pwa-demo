{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from './Header.vue';\nexport default {\n  name: 'Ordine',\n  data() {\n    return {\n      textContent: '' // Contenuto del file di testo\n    };\n  },\n  components: {\n    Header\n  },\n  /*methods: {\n  async inviaOrdine() {\n      try {\n          let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, {\n              textContent: '' // Contenuto del file di testo\n          });\n           console.log(response);\n           if (response.status == 200 && Object.keys(response.data).length > 0) { //faccio così con data perchè -> Object.keys(), restituisce un array contenente tutte le chiavi dell'oggetto. Puoi uso .length su quell'array.\n              localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n              localStorage.setItem(\"id\", JSON.stringify(response.data.user.id));\n              this.$router.push({ name: 'Home' });\n          } else {\n              console.warn(\"Login non riuscito, dati non validi.\");\n          }\n      } catch (error) {\n          console.error(\"Errore durante il login:\", error);\n      }\n  }\n  },*/\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["Header","name","data","textContent","components","mounted","userId","localStorage","getItem","$router","push"],"sources":["/home/ilaria/progettino/src/components/Ordine.vue"],"sourcesContent":["<template >\n    <Header/>\n    <div class=\"editor\">\n        <textarea v-model=\"textContent\"  @keyup.onEnter=\"update\" placeholder=\"Scrivi qui...\"></textarea>\n    </div>\n    <div class=\"invia\">\n        <button>Invia ordine</button>\n    </div>\n</template>\n\n<script>\nimport Header from './Header.vue';\n    export default {\n        name:'Ordine',\n        data() {\n    return {\n      textContent: '' // Contenuto del file di testo\n    };\n  },\n        components:{\n            Header\n        },\n        /*methods: {\n        async inviaOrdine() {\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, {\n                    textContent: '' // Contenuto del file di testo\n                });\n\n                console.log(response);\n\n                if (response.status == 200 && Object.keys(response.data).length > 0) { //faccio così con data perchè -> Object.keys(), restituisce un array contenente tutte le chiavi dell'oggetto. Puoi uso .length su quell'array.\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n                    localStorage.setItem(\"id\", JSON.stringify(response.data.user.id));\n                    this.$router.push({ name: 'Home' });\n                } else {\n                    console.warn(\"Login non riuscito, dati non validi.\");\n                }\n            } catch (error) {\n                console.error(\"Errore durante il login:\", error);\n            }\n        }\n    },*/\n        //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n        mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n    }\n</script>\n\n"],"mappings":";AAWA,OAAOA,MAAK,MAAO,cAAc;AAC7B,eAAe;EACXC,IAAI,EAAC,QAAQ;EACbC,IAAIA,CAAA,EAAG;IACX,OAAO;MACLC,WAAW,EAAE,EAAC,CAAE;IAClB,CAAC;EACH,CAAC;EACKC,UAAU,EAAC;IACPJ;EACJ,CAAC;EACD;;;;;;;;;;;;;;;;;;;EAqBA;EACAK,OAAOA,CAAA,EAAG;IACV,IAAIC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,IAAI;IACtC,IAAIF,MAAK,IAAK,IAAI,EAAE;MAChB,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;QAAET,IAAI,EAAE;MAAQ,CAAC;IACvC;EACJ;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}