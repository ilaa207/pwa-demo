{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"display-clients\",\n  class: \"d-flex flex-column\"\n};\nconst _hoisted_2 = {\n  class: \"list-group list-group-flush\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.costumers, costumer => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: costumer.id,\n      class: \"client-list list-group-item\"\n    });\n  }), 128 /* KEYED_FRAGMENT */))])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_Fragment","_createVNode","_component_Header","_createElementVNode","_hoisted_1","_hoisted_2","_renderList","_ctx","costumers","costumer","key"],"sources":["/home/ilaria/kanbanapp/src/components/Items.vue"],"sourcesContent":["<template>\n    <Header />\n    <div id=\"display-clients\" class=\"d-flex flex-column\">\n        <ul class=\"list-group list-group-flush\">\n            <li v-for=\"costumer in costumers\" :key=\"costumer.id\" class=\"client-list list-group-item\">\n            </li>\n        </ul>\n    </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\n\nexport default {\n    name: 'Items',\n    components: {\n        Header\n    }\n}\n    </script>"],"mappings":";;EAESA,EAAE,EAAC,iBAAiB;EAACC,KAAK,EAAC;;;EACxBA,KAAK,EAAC;AAA6B;;;uBAH/CC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAKM,OALNC,UAKM,GAJFD,mBAAA,CAGK,MAHLE,UAGK,I,kBAFDN,mBAAA,CACKC,SAAA,QALjBM,WAAA,CAImCC,IAAA,CAAAC,SAAS,EAArBC,QAAQ;yBAAnBV,mBAAA,CACK;MAD8BW,GAAG,EAAED,QAAQ,CAACZ,EAAE;MAAEC,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}