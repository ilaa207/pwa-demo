{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      costumerId: null,\n      // ID del cliente selezionato\n      costumerName: '',\n      // Nome del cliente selezionato\n      orders: [] // Lista degli ordini aperti\n    };\n  },\n  components: {\n    Header\n  },\n  methods: {\n    async openOrders() {\n      let token = localStorage.getItem('token').replace(/\"/g, '');\n      try {\n        let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/${this.costumerId}/orders`, {\n          headers: {\n            'authorization': `Bearer ${token}`,\n            'accept': 'application/json'\n          }\n        });\n        console.log(response);\n        this.orders = response.data.orders;\n      } catch (error) {\n        console.warn(\"Error: \", error);\n      }\n    }\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n    // Recupera l'ID del cliente dai parametri della route\n    this.costumerId = this.$route.params.costumerId;\n\n    // Recupera i dati del cliente da localStorage\n    const storedCostumers = JSON.parse(localStorage.getItem('costumers'));\n    const costumer = storedCostumers.find(c => c.id === this.costumerId);\n    console.log(this.costumerId);\n    console.log(costumer);\n    if (costumer) {\n      this.costumerName = costumer.nome_azienda;\n    }\n\n    // Recupera gli ordini aperti\n    if (this.costumerId) {\n      this.openOrders();\n    }\n  }\n};","map":{"version":3,"names":["Header","axios","name","data","costumerId","costumerName","orders","components","methods","openOrders","token","localStorage","getItem","replace","response","get","headers","console","log","error","warn","mounted","userId","$router","push","$route","params","storedCostumers","JSON","parse","costumer","find","c","id","nome_azienda"],"sources":["/home/ilaria/kanbanapp/src/components/Home.vue"],"sourcesContent":["<template>\n  <Header />\n  <div class=\"d-flex flex-column align-items-center px-5 px-ms-4\">\n    <div class=\"d-flex justify-content-center align-items-center\">\n    <h1 class=\"fw-bold mb-4 mt-4\">Welcome back!</h1>\n  </div>\n  <button id=\"actions\" class=\"btn btn-primary py-5 w-100 mb-3 fs-3 fs-sm-1 d-flex justify-content-center align-items-center shadow-lg\" @click=\"this.$router.push({ name: 'Order', params: { costumerId}})\">New order</button>\n  <button id=\"actions\" class=\"btn btn-primary py-5 w-100 mb-3 fs-3 fs-sm-1 d-flex justify-content-center align-items-center shadow-lg\" @click=\"this.$router.push({ name: 'Accept', params: {costumerId}})\">Accept an order</button>\n</div>\n\n<div data-spy=\"scroll\" data-target=\"#list-example\" data-offset=\"0\" class=\"scrollspy-example my-5\">\n  <h1 class=\"fw-bold mb-4 mt-4\">Ordini aperti</h1>\n    <ul v-if=\"orders.length > 0\" class=\"list-group\">\n      <li v-for=\"order in orders\" :key=\"order.id\" class=\"list-group-item\">\n      <h2>{{ order.id }}</h2>\n      </li>\n    </ul>\n    <p v-else>Nessun ordine aperto.</p>\n  </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      costumerId: null, // ID del cliente selezionato\n      costumerName: '', // Nome del cliente selezionato\n      orders: [], // Lista degli ordini aperti\n    };\n},\n  components: {\n    Header\n  },\n  methods: {\n    async openOrders() {\n            let token = localStorage.getItem('token').replace(/\"/g, '');\n            try {\n                let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/${this.costumerId}/orders`, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n                console.log(response);\n                this.orders = response.data.orders;                \n            } catch (error) {\n                console.warn(\"Error: \", error)\n            }\n        },\n  },\n\n\n\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id')\n    if (userId == null) {\n      this.$router.push({ name: 'Login' })\n    }\n    // Recupera l'ID del cliente dai parametri della route\n    this.costumerId = this.$route.params.costumerId;\n\n    // Recupera i dati del cliente da localStorage\n    const storedCostumers = JSON.parse(localStorage.getItem('costumers'));\n      const costumer = storedCostumers.find((c) => c.id === this.costumerId);\n      console.log(this.costumerId);\n      console.log(costumer);\n      if (costumer) {\n        this.costumerName = costumer.nome_azienda;\n      }\n\n    // Recupera gli ordini aperti\n    if (this.costumerId) {\n      this.openOrders();\n    }\n  },\n};\n</script>"],"mappings":";;;AAuBA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,IAAI;MAAE;MAClBC,YAAY,EAAE,EAAE;MAAE;MAClBC,MAAM,EAAE,EAAE,CAAE;IACd,CAAC;EACL,CAAC;EACCC,UAAU,EAAE;IACVP;EACF,CAAC;EACDQ,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACX,IAAIC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAC3D,IAAI;QACA,IAAIC,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,uEAAuE,IAAI,CAACX,UAAU,SAAS,EAAE;UAC5HY,OAAO,EAAE;YACL,eAAe,EAAE,UAAUN,KAAK,EAAE;YAClC,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QACFO,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrB,IAAI,CAACR,MAAK,GAAIQ,QAAQ,CAACX,IAAI,CAACG,MAAM;MACtC,EAAE,OAAOa,KAAK,EAAE;QACZF,OAAO,CAACG,IAAI,CAAC,SAAS,EAAED,KAAK;MACjC;IACJ;EACN,CAAC;EAID;EACAE,OAAOA,CAAA,EAAG;IACR,IAAIC,MAAK,GAAIX,YAAY,CAACC,OAAO,CAAC,IAAI;IACtC,IAAIU,MAAK,IAAK,IAAI,EAAE;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEtB,IAAI,EAAE;MAAQ,CAAC;IACrC;IACA;IACA,IAAI,CAACE,UAAS,GAAI,IAAI,CAACqB,MAAM,CAACC,MAAM,CAACtB,UAAU;;IAE/C;IACA,MAAMuB,eAAc,GAAIC,IAAI,CAACC,KAAK,CAAClB,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;IACnE,MAAMkB,QAAO,GAAIH,eAAe,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAC,KAAM,IAAI,CAAC7B,UAAU,CAAC;IACtEa,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,UAAU,CAAC;IAC5Ba,OAAO,CAACC,GAAG,CAACY,QAAQ,CAAC;IACrB,IAAIA,QAAQ,EAAE;MACZ,IAAI,CAACzB,YAAW,GAAIyB,QAAQ,CAACI,YAAY;IAC3C;;IAEF;IACA,IAAI,IAAI,CAAC9B,UAAU,EAAE;MACnB,IAAI,CAACK,UAAU,CAAC,CAAC;IACnB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}