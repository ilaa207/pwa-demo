{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"full\"\n};\nconst _hoisted_2 = {\n  class: \"login\"\n};\nconst _hoisted_3 = {\n  class: \"input\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"errore\",\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"Login\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.email = $event),\n    placeholder: \"Email\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.email]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.password = $event),\n    placeholder: \"Password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.password]]), _createElementVNode(\"button\", {\n    onClick: [_cache[2] || (_cache[2] = (...args) => _ctx.submit && _ctx.submit(...args)), _cache[3] || (_cache[3] = (...args) => _ctx.login && _ctx.login(...args))]\n  }, \"Login\")]), _ctx.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString(_ctx.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","type","_cache","$event","_ctx","email","placeholder","password","onClick","submit","args","login","errorMessage","_hoisted_4","_toDisplayString","_createCommentVNode"],"sources":["/home/ilaria/progettino/src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"full\">\n        <h1>Login</h1>\n        <div class=\"login\">\n            <div class=\"input\">\n                <input type=\"text\" v-model=\"email\" placeholder=\"Email\" />\n                <input type=\"password\" v-model=\"password\" placeholder=\"Password\" />\n                <button @click=\"submit\" v-on:click=\"login\">Login</button>\n            </div>\n            <p class=\"errore\" v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</p>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport router from '../routers';\nexport default {\n    name: 'Login',\n\n    data() {\n        return {\n            email: '',\n            password: '',\n            errorMessage: '',\n        }\n    },\n\n    methods: {\n        async login() {\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/login`, {\n                    email: this.email,\n                    password: this.password\n                });\n\n                console.log(response);\n                if (response.status == 200 && Object.keys(response.data).length > 0) { //faccio così con data perchè -> Object.keys(), restituisce un array contenente tutte le chiavi dell'oggetto. Puoi uso .length su quell'array.\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n                    localStorage.setItem(\"id\", JSON.stringify(response.data.user.id));\n                    this.$router.push({ name: 'Home' });\n                } else {\n                    console.warn(\"Login non riuscito, dati non validi.\");\n                }\n                \n            } catch (error) {\n                if (this.email.trim() == '' || this.password.trim() == '') {\n                    this.errorMessage = 'Il campo non può essere vuoto.';\n                } else {\n                    this.errorMessage = 'Email o password errati.';\n                console.error(\"Errore durante il login:\", error);\n            }\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId) {\n            this.$router.push({ name: 'Home' })\n        }\n    }\n}\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAM;;EAERA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC;AAAO;;EAJ9BC,GAAA;EASeD,KAAK,EAAC,QAAQ;EAAqBE,KAAmB,EAAnB;IAAA;EAAA;;;uBAR9CC,mBAAA,CAUM,OAVNC,UAUM,G,0BATFC,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAOM,OAPNC,UAOM,GANFD,mBAAA,CAIM,OAJNE,UAIM,G,gBAHFF,mBAAA,CAAyD;IAAlDG,IAAI,EAAC,MAAM;IALlC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAK4CC,IAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAnBF,IAAA,CAAAC,KAAK,E,mBACjCP,mBAAA,CAAmE;IAA5DG,IAAI,EAAC,UAAU;IANtC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMgDC,IAAA,CAAAG,QAAQ,GAAAJ,MAAA;IAAEG,WAAW,EAAC;iDAAtBF,IAAA,CAAAG,QAAQ,E,GACxCT,mBAAA,CAAyD;IAAhDU,OAAK,G,uCAAEJ,IAAA,CAAAK,MAAA,IAAAL,IAAA,CAAAK,MAAA,IAAAC,IAAA,CAAM,G,uCAAcN,IAAA,CAAAO,KAAA,IAAAP,IAAA,CAAAO,KAAA,IAAAD,IAAA,CAAK;KAAE,OAAK,E,GAE5BN,IAAA,CAAAQ,YAAY,I,cAApChB,mBAAA,CAAgF,KAAhFiB,UAAgF,EAAAC,gBAAA,CAAnBV,IAAA,CAAAQ,YAAY,oBATrFG,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}