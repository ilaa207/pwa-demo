{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, withModifiers as _withModifiers, Fragment as _Fragment } from \"vue\";\nimport _imports_0 from '../assets/logo@2x.png';\nconst _hoisted_1 = {\n  class: \"container d-flex justify-content-center align-items-center vh-100\"\n};\nconst _hoisted_2 = {\n  class: \"col-12 col-sm-8 col-md-6 col-lg-4\"\n};\nconst _hoisted_3 = {\n  class: \"card shadow-lg\"\n};\nconst _hoisted_4 = {\n  class: \"card-body p-4\"\n};\nconst _hoisted_5 = {\n  class: \"mb-3\"\n};\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nconst _hoisted_7 = {\n  class: \"d-grid mb-3\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"error\",\n  style: {\n    \"color\": \"red\"\n  }\n};\nconst _hoisted_9 = {\n  class: \"full\"\n};\nconst _hoisted_10 = {\n  class: \"login\"\n};\nconst _hoisted_11 = {\n  class: \"input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Container principale \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n    class: \"text-center mb-3\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Logo\",\n    class: \"img-fluid mt-0\",\n    style: {\n      \"max-height\": \"100%\",\n      \"max-width\": \"100%\"\n    }\n  })], -1 /* HOISTED */)), _createCommentVNode(\" Card di Login \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Titolo \"), _cache[12] || (_cache[12] = _createElementVNode(\"h3\", {\n    class: \"text-center mb-4 fw-bold\"\n  }, \"Login\", -1 /* HOISTED */)), _createCommentVNode(\" Form \"), _createElementVNode(\"form\", null, [_createCommentVNode(\" Email \"), _createElementVNode(\"div\", _hoisted_5, [_cache[10] || (_cache[10] = _createElementVNode(\"label\", null, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.login && $options.login(...args), [\"enter\"])),\n    placeholder: \"Email\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.email]])]), _createCommentVNode(\" Password \"), _createElementVNode(\"div\", _hoisted_6, [_cache[11] || (_cache[11] = _createElementVNode(\"label\", null, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    class: \"form-control\",\n    placeholder: \"Password\",\n    autocomplete: \"current-password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]])]), _createCommentVNode(\" Bottone Login \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    id: \"btnLogin\",\n    type: \"submit\",\n    class: \"btn btn-primary\",\n    onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.login && $options.login(...args), [\"enter\"])),\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.login && $options.login(...args))\n  }, \"Login\", 32 /* NEED_HYDRATION */)]), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])])])])], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_cache[14] || (_cache[14] = _createElementVNode(\"h1\", null, \"Please Login\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.password = $event),\n    onKeyup: _cache[7] || (_cache[7] = _withKeys((...args) => $options.login && $options.login(...args), [\"enter\"])),\n    placeholder: \"Password\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.password]]), _createElementVNode(\"button\", {\n    onKeyup: _cache[8] || (_cache[8] = _withKeys((...args) => $options.login && $options.login(...args), [\"enter\"])),\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.login && $options.login(...args))\n  }, \"Login\", 32 /* NEED_HYDRATION */)])])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","class","key","style","_createElementBlock","_Fragment","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","login","_createCommentVNode","_hoisted_1","_hoisted_2","src","alt","_hoisted_3","_hoisted_4","_hoisted_5","type","$event","$data","email","onKeyup","_withKeys","placeholder","_hoisted_6","password","autocomplete","_hoisted_7","id","onClick","errorMessage","_hoisted_8","_toDisplayString","_hoisted_9","_hoisted_10","_hoisted_11"],"sources":["/home/ilaria/kanbanapp/src/components/Login.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"login\">\n        <!-- Container principale -->\n        <div class=\"container d-flex justify-content-center align-items-center vh-100\">\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-4\">\n                <div class=\"text-center mb-3\" style=\"width: 100%;\">\n                    <img src=\"../assets/logo@2x.png\" alt=\"Logo\" class=\"img-fluid mt-0\"\n                        style=\"max-height: 100%; max-width: 100%;\" />\n                </div>\n                <!-- Card di Login -->\n                <div class=\"card shadow-lg\">\n                    <div class=\"card-body p-4\">\n                        <!-- Titolo -->\n                        <h3 class=\"text-center mb-4 fw-bold\">Login</h3>\n                        <!-- Form -->\n                        <form>\n                            <!-- Email -->\n                            <div class=\"mb-3\">\n                                    <label>Email</label>\n                                    <input type=\"text\" v-model=\"email\" @keyup.enter=\"login\" placeholder=\"Email\" />\n                                </div>\n                                <!-- Password -->\n                                <div class=\"mb-3\">\n                                    <label>Password</label>\n                                    <input type=\"password\" v-model=\"password\" class=\"form-control\"\n                                        placeholder=\"Password\" autocomplete=\"current-password\" />\n                                </div>\n                                <!-- Bottone Login -->\n                                <div class=\"d-grid mb-3\">\n                                    <button id=\"btnLogin\" type=\"submit\" class=\"btn btn-primary\" @keyup.enter=\"login\"\n                                        v-on:click=\"login\">Login</button>\n                                </div>\n                                <p class=\"error\" v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</p>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n\n\n\n\n    <div class=\"full\">\n        \n        <div class=\"login\">\n            <h1>Please Login</h1>\n            <div class=\"input\">\n               \n                <input type=\"password\" v-model=\"password\" @keyup.enter=\"login\" placeholder=\"Password\" />\n                <button @keyup.enter=\"login\" v-on:click=\"login\">Login</button>\n            </div>\n            \n        </div>\n    </div> \n</template>\n\n<script>\nimport axios from 'axios'\nimport router from '../routers';\nexport default {\n    name: 'Login',\n\n    data() {\n        return {\n            email: '',\n            password: '',\n            errorMessage: '',\n        }\n    },\n\n    methods: {\n        async login() {\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/login`, {\n                    email: this.email,\n                    password: this.password\n                });\n\n                console.log(response);\n                if (response.status == 200 && Object.keys(response.data).length > 0) { //faccio così con data perchè è di tipo oggetto -> Object.keys(), restituisce un array contenente tutte le chiavi dell'oggetto. Puoi uso .length su quell'array.\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n                    localStorage.setItem(\"id\", JSON.stringify(response.data.user.id));\n                    this.$router.push({ name: 'Home' });\n                } else {\n                    console.warn(\"Login failed, invalid data..\");\n                }\n\n            } catch (error) {\n                if (this.email.trim() == '' || this.password.trim() == '') { //.trim rimuove gli spazi e gli a capo, controllo se sono vuoti e se uno dei due lo è mando un messaggio di errore\n                    this.errorMessage = 'The field cannot be empty.';\n                } else {\n                    this.errorMessage = 'Incorrect e-mail or password.'; //nel caso siano pieni entrambi, stampo messaggio di errore diverso\n                }\n                console.error(\"Error while logging in:\", error);\n            }\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se è loggato, rimando alla pagina di home\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId) {\n            this.$router.push({ name: 'Home' })\n        }\n    }\n}\n</script>\n\n<style>\n.full {\n    color: #022970;\n}\n\n.login {\n    width: 400px;\n    height: 410px;\n    display: block;\n    margin-bottom: 30px;\n    margin-right: auto;\n    margin-left: auto;\n    background-color: #022970;\n    box-shadow: #2c3e50;\n    border-radius: 10px;\n}\n\n.login input {\n    width: 300px;\n    height: 40px;\n    padding-left: 10px;\n    display: block;\n    margin-top: auto;\n    margin-bottom: 30px;\n    margin-right: auto;\n    margin-left: auto;\n    border: 1px solid #ffffff;\n}\n\n.login button:hover {\n    transition: 0.2s ease-in;\n    background-color: #f0f0f0;\n}\n\n.login button {\n    width: 200px;\n    height: 40px;\n    padding-left: 10px;\n    display: block;\n    margin-bottom: 30px;\n    margin-right: auto;\n    margin-left: auto;\n    border: 1px solid #ffffff;\n    background: #ffffff;\n    color: #022970;\n    cursor: pointer;\n}\n\n.login h1 {\n    color: white;\n    padding-top: 30px;\n    margin: auto;\n    font-size: 25px;\n    font-family: 'Helvetica';\n}\n\n.input {\n    display: block;\n    padding: 38px;\n    margin-right: auto;\n    margin-left: auto;\n}\n\n.error {\n    width: 400px;\n    background-color: #022970;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}