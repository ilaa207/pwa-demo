{"ast":null,"code":"/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker';\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log('App is being served from cache by a service worker.\\n' + 'For more details, visit https://goo.gl/AFskqB');\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log('No internet connection found. App is running in offline mode.');\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js').then(registration => {\n      console.log('Service Worker registrato con successo:', registration);\n      console.log('State del Service Worker:', registration.active);\n    }).catch(error => {\n      console.log('Errore nella registrazione del Service Worker:', error);\n    });\n  });\n}","map":{"version":3,"names":["register","process","env","NODE_ENV","BASE_URL","ready","console","log","registered","cached","updatefound","updated","offline","error","navigator","window","addEventListener","serviceWorker","then","registration","active","catch"],"sources":["/home/ilaria/kanbanapp/src/registerServiceWorker.js"],"sourcesContent":["/* eslint-disable no-console */\n\nimport { register } from 'register-service-worker'\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready () {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n        'For more details, visit https://goo.gl/AFskqB'\n      )\n    },\n    registered () {\n      console.log('Service worker has been registered.')\n    },\n    cached () {\n      console.log('Content has been cached for offline use.')\n    },\n    updatefound () {\n      console.log('New content is downloading.')\n    },\n    updated () {\n      console.log('New content is available; please refresh.')\n    },\n    offline () {\n      console.log('No internet connection found. App is running in offline mode.')\n    },\n    error (error) {\n      console.error('Error during service worker registration:', error)\n    }\n  })\n}\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/service-worker.js')\n      .then((registration) => {\n        console.log('Service Worker registrato con successo:', registration);\n        console.log('State del Service Worker:', registration.active);\n      })\n      .catch((error) => {\n        console.log('Errore nella registrazione del Service Worker:', error);\n      });\n  });\n}\n\n"],"mappings":"AAAA;;AAEA,SAASA,QAAQ,QAAQ,yBAAyB;AAElD,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCH,QAAQ,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACE,QAAQ,mBAAmB,EAAE;IACnDC,KAAKA,CAAA,EAAI;MACPC,OAAO,CAACC,GAAG,CACT,uDAAuD,GACvD,+CACF,CAAC;IACH,CAAC;IACDC,UAAUA,CAAA,EAAI;MACZF,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;IACpD,CAAC;IACDE,MAAMA,CAAA,EAAI;MACRH,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;IACzD,CAAC;IACDG,WAAWA,CAAA,EAAI;MACbJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC;IACDI,OAAOA,CAAA,EAAI;MACTL,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IAC1D,CAAC;IACDK,OAAOA,CAAA,EAAI;MACTN,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;IAC9E,CAAC;IACDM,KAAKA,CAAEA,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,2CAA2C,EAAEA,KAAK,CAAC;IACnE;EACF,CAAC,CAAC;AACJ;AACA,IAAI,eAAe,IAAIC,SAAS,EAAE;EAChCC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;IACpCF,SAAS,CAACG,aAAa,CAACjB,QAAQ,CAAC,oBAAoB,CAAC,CACnDkB,IAAI,CAAEC,YAAY,IAAK;MACtBb,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEY,YAAY,CAAC;MACpEb,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEY,YAAY,CAACC,MAAM,CAAC;IAC/D,CAAC,CAAC,CACDC,KAAK,CAAER,KAAK,IAAK;MAChBP,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEM,KAAK,CAAC;IACtE,CAAC,CAAC;EACN,CAAC,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}