{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      costumer: [],\n      // cliente selezionato\n      orders: [] // Lista degli ordini aperti\n    };\n  },\n  components: {\n    Header\n  },\n  methods: {\n    async openOrders() {\n      this.costumer = localStorage.getItem('selectedCostumer');\n      this.costumer = JSON.parse(this.costumer);\n      let token = localStorage.getItem('token').replace(/\"/g, '');\n      console.log(\"idCliente\", this.costumer.id);\n      try {\n        let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/${this.costumer.id}/orders`, {\n          headers: {\n            'authorization': `Bearer ${token}`,\n            'accept': 'application/json'\n          }\n        });\n        console.log(response);\n        this.orders = response.data.orders;\n      } catch (error) {\n        console.warn(\"Error: \", error);\n      }\n    }\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n    // Recupera l'ID del cliente dai parametri della route\n\n    // Recupera gli ordini aperti\n    if (this.costumerId) {\n      this.openOrders();\n    }\n  }\n};","map":{"version":3,"names":["Header","axios","name","data","costumer","orders","components","methods","openOrders","localStorage","getItem","JSON","parse","token","replace","console","log","id","response","get","headers","error","warn","mounted","userId","$router","push","costumerId"],"sources":["/home/ilaria/kanbanapp/src/components/Home.vue"],"sourcesContent":["<template>\n  <Header />\n  <div class=\"d-flex flex-column align-items-center px-5 px-ms-4\">\n    <div class=\"d-flex justify-content-center align-items-center\">\n      <h1 class=\"fw-bold mb-4 mt-4\">Welcome back!</h1>\n    \n  </div>\n  <h2 class=\" mb-4 mt-4\">Customer: {{ this.costumer.name }}</h2>\n  <button id=\"actions\" class=\"btn btn-primary py-5 w-100 mb-3 fs-3 fs-sm-1 d-flex justify-content-center align-items-center shadow-lg\" @click=\"this.$router.push({ name: 'Order', params: { costumerId: this.costumerId }})\">New order</button>\n  <button id=\"actions\" class=\"btn btn-primary py-5 w-100 mb-3 fs-3 fs-sm-1 d-flex justify-content-center align-items-center shadow-lg\" @click=\"this.$router.push({ name: 'Accept', params: { costumerId: this.costumerId }})\">Accept an order</button>\n</div>\n\n<div data-spy=\"scroll\" data-target=\"#list-example\" data-offset=\"0\" class=\"scrollspy-example my-5\">\n  <h1 class=\"fw-bold mb-4 mt-4\">Ordini aperti</h1>\n    <ul v-if=\"orders.length > 0\" class=\"list-group\">\n      <li v-for=\"order in orders\" :key=\"order.id\" class=\"list-group-item\">\n        <a @click=\"this.$router.push({ name: 'OpenOrder', params: { orderId: order.id, items: JSON.stringify(order.order_items) } });\">\n      <h2>{{ order.id }}</h2>\n    </a>\n      </li>\n    </ul>\n    <p v-else>Nessun ordine aperto.</p>\n  </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      costumer: [], // cliente selezionato\n      orders: [], // Lista degli ordini aperti\n    };\n},\n  components: {\n    Header\n  },\n  methods: {\n    async openOrders() {\n      this.costumer = localStorage.getItem('selectedCostumer');\n      this.costumer = JSON.parse(this.costumer);\n            let token = localStorage.getItem('token').replace(/\"/g, '');\n            console.log(\"idCliente\", this.costumer.id)\n            try {\n                let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/${this.costumer.id}/orders`, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n                console.log(response);\n                this.orders = response.data.orders;                \n            } catch (error) {\n                console.warn(\"Error: \", error)\n            }\n        },\n  },\n\n\n\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id')\n    if (userId == null) {\n      this.$router.push({ name: 'Login' })\n    }\n    // Recupera l'ID del cliente dai parametri della route\n\n    // Recupera gli ordini aperti\n    if (this.costumerId) {\n      this.openOrders();\n    }\n  },\n};\n</script>"],"mappings":";AA2BA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MAAE;MACdC,MAAM,EAAE,EAAE,CAAE;IACd,CAAC;EACL,CAAC;EACCC,UAAU,EAAE;IACVN;EACF,CAAC;EACDO,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACJ,QAAO,GAAIK,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;MACxD,IAAI,CAACN,QAAO,GAAIO,IAAI,CAACC,KAAK,CAAC,IAAI,CAACR,QAAQ,CAAC;MACnC,IAAIS,KAAI,GAAIJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACI,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAC3DC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACZ,QAAQ,CAACa,EAAE;MACzC,IAAI;QACA,IAAIC,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAC,uEAAuE,IAAI,CAACf,QAAQ,CAACa,EAAE,SAAS,EAAE;UAC7HG,OAAO,EAAE;YACL,eAAe,EAAE,UAAUP,KAAK,EAAE;YAClC,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QACFE,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;QACrB,IAAI,CAACb,MAAK,GAAIa,QAAQ,CAACf,IAAI,CAACE,MAAM;MACtC,EAAE,OAAOgB,KAAK,EAAE;QACZN,OAAO,CAACO,IAAI,CAAC,SAAS,EAAED,KAAK;MACjC;IACJ;EACN,CAAC;EAID;EACAE,OAAOA,CAAA,EAAG;IACR,IAAIC,MAAK,GAAIf,YAAY,CAACC,OAAO,CAAC,IAAI;IACtC,IAAIc,MAAK,IAAK,IAAI,EAAE;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAExB,IAAI,EAAE;MAAQ,CAAC;IACrC;IACA;;IAEA;IACA,IAAI,IAAI,CAACyB,UAAU,EAAE;MACnB,IAAI,CAACnB,UAAU,CAAC,CAAC;IACnB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}