{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"full d-flex justify-content-center min-vh-100\"\n};\nconst _hoisted_2 = {\n  class: \"col-12 col-sm-8 col-md-6 col-lg-4\"\n};\nconst _hoisted_3 = {\n  class: \"login card shadow-lg mx-3\"\n};\nconst _hoisted_4 = {\n  class: \"card-body p-4\"\n};\nconst _hoisted_5 = {\n  class: \"input align-items-center\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"text-danger mt-2\",\n  style: {\n    \"color\": \"red\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"div\", {\n    class: \"text-center mb-3\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, \" /* LOGO */ \", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", {\n    class: \"text-center fw-bold\"\n  }, \"Login\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.login && $options.login(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Form che gestisce l'invio \"), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    placeholder: \"email@esempio.com\",\n    autocomplete: \"email\",\n    class: \"form-control mx-1 mb-3\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    placeholder: \"password\",\n    autocomplete: \"password\",\n    class: \"form-control mx-1 mb-3\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.password]]), _createElementVNode(\"input\", {\n    type: \"checkbox\",\n    class: \"mx-2\",\n    onClick: _cache[2] || (_cache[2] = $event => $options.showPassword())\n  }), _cache[4] || (_cache[4] = _createTextVNode(\"Mostra Password \")), $data.errorMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary mb-2 w-50\"\n  }, \" Login \", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])])])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","$options","login","_createCommentVNode","_hoisted_5","type","$event","$data","email","placeholder","autocomplete","required","id","password","onClick","showPassword","_createTextVNode","errorMessage","_hoisted_6","_toDisplayString"],"sources":["/home/ilaria/pwa-demo/src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"full d-flex justify-content-center min-vh-100\">\n        <div class=\"col-12 col-sm-8 col-md-6 col-lg-4\">\n            <div class=\"text-center mb-3\" style=\"width:100%\">\n                /* LOGO */\n            </div>\n            <div class=\"login card shadow-lg mx-3\">\n                <div class=\"card-body p-4\">\n                    <h2 class=\"text-center fw-bold\">Login</h2>\n                    <form @submit.prevent=\"login\"> <!-- Form che gestisce l'invio -->\n                        <div class=\"input align-items-center\">\n                            <input type=\"email\" v-model=\"email\" placeholder=\"email@esempio.com\" autocomplete=\"email\"\n                                class=\"form-control mx-1 mb-3\" required />\n                                <input id=\"password\" type=\"password\" v-model=\"password\" placeholder=\"password\" autocomplete=\"password\"\n                                    class=\"form-control mx-1 mb-3\" required />\n                                    <input type=\"checkbox\" class=\"mx-2\" @click=\"showPassword()\">Mostra Password</input>\n                            <p class=\"text-danger mt-2\" v-if=\"errorMessage\" style=\"color: red;\">\n                                {{ errorMessage }}\n                            </p>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary mb-2 w-50\">\n                            Login\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport router from '../routers';\nexport default {\n    name: 'Login',\n\n    data() {\n        return {\n            email: '',\n            password: '',\n            errorMessage: '',\n        }\n    },\n\n    methods: {\n        showPassword() {\n    var pw = document.getElementById(\"password\");\n    if (pw.type === \"password\") {\n        pw.type = \"text\";\n    } else {\n        pw.type = \"password\";\n    }\n},\n        async login() {\n            try {\n                if (this.email === 'test@azienda.com' && this.password === 'test') {\n  let response = await axios.get('/mock/login.json');\n                }\n\n                console.log(response);\n                if (response.status == 200 && Object.keys(response.data).length > 0) { //faccio così con data perchè è di tipo oggetto -> Object.keys(), restituisce un array contenente tutte le chiavi dell'oggetto. Puoi uso .length su quell'array.\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n                    localStorage.setItem(\"id\", JSON.stringify(response.data.user.id));\n                    localStorage.setItem(\"nome_azienda\", JSON.stringify(response.data.user.nome_azienda));\n                    localStorage.setItem(\"nome_referente\", JSON.stringify(response.data.user.nome_referente));\n                    localStorage.setItem(\"email\", JSON.stringify(response.data.user.email));\n                    localStorage.setItem(\"logo\", JSON.stringify(response.data.user.logo));\n                    this.$router.push({ name: 'Client' });\n                } else {\n                    console.warn(\"Login failed, invalid data..\");\n                }\n\n            } catch (error) {\n                /*if (this.email.trim() == '' || this.password.trim() == '') { //.trim rimuove gli spazi e gli a capo, controllo se sono vuoti e se uno dei due lo è mando un messaggio di errore*/\n                this.errorMessage = 'E-mail o password errati.';\n                console.error(\"Error while logging in:\", error);\n            }\n        }\n    },\n\n//controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se è loggato, rimando alla pagina di di scelta cliente\nmounted() {\n    let userId = localStorage.getItem('id')\n    if (userId) {\n        this.$router.push({ name: 'Client' })\n    }\n}\n}\n</script>\n\n"],"mappings":";;EACSA,KAAK,EAAC;AAA+C;;EACjDA,KAAK,EAAC;AAAmC;;EAIrCA,KAAK,EAAC;AAA2B;;EAC7BA,KAAK,EAAC;AAAe;;EAGbA,KAAK,EAAC;AAA0B;;EAV7DC,GAAA;EAgB+BD,KAAK,EAAC,kBAAkB;EAAqBE,KAAmB,EAAnB;IAAA;EAAA;;;uBAfxEC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBFC,mBAAA,CAwBM,OAxBNC,UAwBM,G,0BAvBFD,mBAAA,CAEM;IAFDL,KAAK,EAAC,kBAAkB;IAACE,KAAkB,EAAlB;MAAA;IAAA;KAAmB,cAEjD,sBACAG,mBAAA,CAmBM,OAnBNE,UAmBM,GAlBFF,mBAAA,CAiBM,OAjBNG,UAiBM,G,0BAhBFH,mBAAA,CAA0C;IAAtCL,KAAK,EAAC;EAAqB,GAAC,OAAK,sBACrCK,mBAAA,CAcO;IAdAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MATjCC,cAAA,KAAAC,IAAA,KAS2CC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;MAAGG,mBAAA,+BAAkC,EAC7DV,mBAAA,CASM,OATNW,UASM,G,gBARFX,mBAAA,CAC8C;IADvCY,IAAI,EAAC,OAAO;IAX/C,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAWyDC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,WAAW,EAAC,mBAAmB;IAACC,YAAY,EAAC,OAAO;IACpFtB,KAAK,EAAC,wBAAwB;IAACuB,QAAQ,EAAR;iDADNJ,KAAA,CAAAC,KAAK,E,mBAE9Bf,mBAAA,CAC8C;IADvCmB,EAAE,EAAC,UAAU;IAACP,IAAI,EAAC,UAAU;IAbpE,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAa8EC,KAAA,CAAAM,QAAQ,GAAAP,MAAA;IAAEG,WAAW,EAAC,UAAU;IAACC,YAAY,EAAC,UAAU;IAClGtB,KAAK,EAAC,wBAAwB;IAACuB,QAAQ,EAAR;iDADWJ,KAAA,CAAAM,QAAQ,E,GAElDpB,mBAAA,CAA4D;IAArDY,IAAI,EAAC,UAAU;IAACjB,KAAK,EAAC,MAAM;IAAE0B,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAAEL,QAAA,CAAAc,YAAY;gCAf5FC,gBAAA,CAegG,kBACpE,IAAkCT,KAAA,CAAAU,YAAY,I,cAA9C1B,mBAAA,CAEI,KAFJ2B,UAEI,EAAAC,gBAAA,CADGZ,KAAA,CAAAU,YAAY,oBAjB/Cd,mBAAA,e,6BAoBwBV,mBAAA,CAES;IAFDY,IAAI,EAAC,QAAQ;IAACjB,KAAK,EAAC;KAA4B,SAExD,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}