{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport axios from 'axios';\nimport router from '../routers';\nexport default {\n  name: 'Login',\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    showPassword() {\n      var pw = document.getElementById(\"password\");\n      if (pw.type === \"password\") {\n        pw.type = \"text\";\n      } else {\n        pw.type = \"password\";\n      }\n    },\n    async login() {\n      try {\n        // Rimuoviamo la parte di hashing e compariamo la password in chiaro\n        let response = await axios.get('http://localhost:3000/users'); // Ottieni tutti gli utenti\n\n        console.log(response);\n        if (response.status == 200 && Array.isArray(response.data)) {\n          // Controlla se la risposta è un array\n          // Cerca l'utente corrispondente nell'array\n          const user = response.data.find(users => users.email === this.email && users.password === this.password);\n          if (user) {\n            // Login successful\n            localStorage.setItem(\"token\", JSON.stringify(user.token));\n            localStorage.setItem(\"id\", JSON.stringify(user.id));\n            localStorage.setItem(\"nome_azienda\", JSON.stringify(user.nome_azienda));\n            localStorage.setItem(\"nome_referente\", JSON.stringify(user.nome_referente));\n            localStorage.setItem(\"email\", JSON.stringify(user.email));\n            localStorage.setItem(\"logo\", JSON.stringify(user.logo));\n            this.$router.push({\n              name: 'Client'\n            });\n          } else {\n            // Login failed\n            this.errorMessage = 'E-mail o password errati.';\n            console.warn(\"Login failed, invalid credentials.\");\n          }\n        } else {\n          this.errorMessage = 'Errore durante il recupero degli utenti.';\n          console.warn(\"Login failed, invalid data format.\");\n        }\n      } catch (error) {\n        this.errorMessage = 'Errore durante il login.';\n        console.error(\"Error while logging in:\", error);\n      }\n    }\n  },\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId) {\n      this.$router.push({\n        name: 'Client'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","router","name","data","email","password","errorMessage","methods","showPassword","pw","document","getElementById","type","login","response","get","console","log","status","Array","isArray","user","find","users","localStorage","setItem","JSON","stringify","token","id","nome_azienda","nome_referente","logo","$router","push","warn","error","mounted","userId","getItem"],"sources":["/home/ilaria/pwa-demo/src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"full d-flex justify-content-center min-vh-100\">\n        <div class=\"col-12 col-sm-8 col-md-6 col-lg-4\">\n            <!--<div class=\"text-center mb-3\" style=\"width:100%\">\n                LOGO\n            </div>-->\n            <div class=\"login card shadow-lg mx-3\">\n                <div class=\"card-body p-4 py-4\">\n                    <h2 class=\"text-center fw-bold\">Login</h2>\n                    <form @submit.prevent=\"login\"> <!-- Form che gestisce l'invio -->\n                        <div class=\"input align-items-center\">\n                            <input type=\"email\" v-model=\"email\" placeholder=\"email@esempio.com\" autocomplete=\"email\"\n                                class=\"form-control mx-1 mb-3\" required />\n                            <input id=\"password\" type=\"password\" v-model=\"password\" placeholder=\"password\" autocomplete=\"password\"\n                                class=\"form-control mx-1 mb-3\" required />\n                            <input type=\"checkbox\" class=\"mx-2\" @click=\"showPassword()\">Mostra Password</input>\n                            <p class=\"text-danger mt-2\" v-if=\"errorMessage\" style=\"color: red;\">\n                                {{ errorMessage }}\n                            </p>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary mb-2 w-50\">\n                            Login\n                        </button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport router from '../routers';\n\nexport default {\n    name: 'Login',\n\n    data() {\n        return {\n            email: '',\n            password: '',\n            errorMessage: '',\n        }\n    },\n\n    methods: {\n        showPassword() {\n            var pw = document.getElementById(\"password\");\n            if (pw.type === \"password\") {\n                pw.type = \"text\";\n            } else {\n                pw.type = \"password\";\n            }\n        },\n        async login() {\n            try {\n                // Rimuoviamo la parte di hashing e compariamo la password in chiaro\n                let response = await axios.get('http://localhost:3000/users'); // Ottieni tutti gli utenti\n\n                console.log(response);\n\n                if (response.status == 200 && Array.isArray(response.data)) { // Controlla se la risposta è un array\n                    // Cerca l'utente corrispondente nell'array\n                    const user = response.data.find(users => users.email === this.email && users.password === this.password);\n\n                    if (user) {\n                        // Login successful\n                        localStorage.setItem(\"token\", JSON.stringify(user.token));\n                        localStorage.setItem(\"id\", JSON.stringify(user.id));\n                        localStorage.setItem(\"nome_azienda\", JSON.stringify(user.nome_azienda));\n                        localStorage.setItem(\"nome_referente\", JSON.stringify(user.nome_referente));\n                        localStorage.setItem(\"email\", JSON.stringify(user.email));\n                        localStorage.setItem(\"logo\", JSON.stringify(user.logo));\n\n                        this.$router.push({ name: 'Client' });\n                    } else {\n                        // Login failed\n                        this.errorMessage = 'E-mail o password errati.';\n                        console.warn(\"Login failed, invalid credentials.\");\n                    }\n                } else {\n                    this.errorMessage = 'Errore durante il recupero degli utenti.';\n                    console.warn(\"Login failed, invalid data format.\");\n                }\n\n            } catch (error) {\n                this.errorMessage = 'Errore durante il login.';\n                console.error(\"Error while logging in:\", error);\n            }\n        }\n    },\n\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId) {\n            this.$router.push({ name: 'Client' })\n        }\n    }\n}\n</script>\n"],"mappings":";;;AA+BA,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,MAAK,MAAO,YAAY;AAE/B,eAAe;EACXC,IAAI,EAAE,OAAO;EAEbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAClB;EACJ,CAAC;EAEDC,OAAO,EAAE;IACLC,YAAYA,CAAA,EAAG;MACX,IAAIC,EAAC,GAAIC,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;MAC5C,IAAIF,EAAE,CAACG,IAAG,KAAM,UAAU,EAAE;QACxBH,EAAE,CAACG,IAAG,GAAI,MAAM;MACpB,OAAO;QACHH,EAAE,CAACG,IAAG,GAAI,UAAU;MACxB;IACJ,CAAC;IACD,MAAMC,KAAKA,CAAA,EAAG;MACV,IAAI;QACA;QACA,IAAIC,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,6BAA6B,CAAC,EAAE;;QAE/DC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;QAErB,IAAIA,QAAQ,CAACI,MAAK,IAAK,GAAE,IAAKC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACX,IAAI,CAAC,EAAE;UAAE;UAC1D;UACA,MAAMkB,IAAG,GAAIP,QAAQ,CAACX,IAAI,CAACmB,IAAI,CAACC,KAAI,IAAKA,KAAK,CAACnB,KAAI,KAAM,IAAI,CAACA,KAAI,IAAKmB,KAAK,CAAClB,QAAO,KAAM,IAAI,CAACA,QAAQ,CAAC;UAExG,IAAIgB,IAAI,EAAE;YACN;YACAG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAACO,KAAK,CAAC,CAAC;YACzDJ,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAACQ,EAAE,CAAC,CAAC;YACnDL,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAACS,YAAY,CAAC,CAAC;YACvEN,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAACU,cAAc,CAAC,CAAC;YAC3EP,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAACjB,KAAK,CAAC,CAAC;YACzDoB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAACW,IAAI,CAAC,CAAC;YAEvD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;cAAEhC,IAAI,EAAE;YAAS,CAAC,CAAC;UACzC,OAAO;YACH;YACA,IAAI,CAACI,YAAW,GAAI,2BAA2B;YAC/CU,OAAO,CAACmB,IAAI,CAAC,oCAAoC,CAAC;UACtD;QACJ,OAAO;UACH,IAAI,CAAC7B,YAAW,GAAI,0CAA0C;UAC9DU,OAAO,CAACmB,IAAI,CAAC,oCAAoC,CAAC;QACtD;MAEJ,EAAE,OAAOC,KAAK,EAAE;QACZ,IAAI,CAAC9B,YAAW,GAAI,0BAA0B;QAC9CU,OAAO,CAACoB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ;EACJ,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACN,IAAIC,MAAK,GAAId,YAAY,CAACe,OAAO,CAAC,IAAI;IACtC,IAAID,MAAM,EAAE;MACR,IAAI,CAACL,OAAO,CAACC,IAAI,CAAC;QAAEhC,IAAI,EAAE;MAAS,CAAC;IACxC;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}