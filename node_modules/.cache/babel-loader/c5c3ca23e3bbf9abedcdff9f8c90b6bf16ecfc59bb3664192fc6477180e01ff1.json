{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/logo@2x.png';\nconst _hoisted_1 = {\n  class: \"container d-flex justify-content-center align-items-center vh-100\"\n};\nconst _hoisted_2 = {\n  class: \"col-12 col-sm-8 col-md-6 col-lg-4\"\n};\nconst _hoisted_3 = {\n  class: \"card shadow-lg\"\n};\nconst _hoisted_4 = {\n  class: \"card-body p-4\"\n};\nconst _hoisted_5 = {\n  class: \"mb-3\"\n};\nconst _hoisted_6 = {\n  class: \"mb-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Container principale \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[8] || (_cache[8] = _createElementVNode(\"div\", {\n    class: \"text-center mb-3\",\n    style: {\n      \"width\": \"100%\"\n    }\n  }, [_createElementVNode(\"img\", {\n    src: _imports_0,\n    alt: \"Logo\",\n    class: \"img-fluid mt-0\",\n    style: {\n      \"max-height\": \"100%\",\n      \"max-width\": \"100%\"\n    }\n  })], -1 /* HOISTED */)), _createCommentVNode(\" Card di Login \"), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" Titolo \"), _cache[7] || (_cache[7] = _createElementVNode(\"h3\", {\n    class: \"text-center mb-4 fw-bold\"\n  }, \"Login\", -1 /* HOISTED */)), _createCommentVNode(\" Form \"), _createElementVNode(\"form\", null, [_createCommentVNode(\" Email \"), _createElementVNode(\"div\", _hoisted_5, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"email\",\n    class: \"form-label\"\n  }, \"Email\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.login && $options.login(...args), [\"enter\"])),\n    class: \"form-control\",\n    placeholder: \"email@example.com\",\n    required: \"\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.email]])]), _createCommentVNode(\" Password \"), _createElementVNode(\"div\", _hoisted_6, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", {\n    for: \"password\",\n    class: \"form-label\"\n  }, \"Password\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.password = $event),\n    onKeyup: _cache[3] || (_cache[3] = _withKeys((...args) => $options.login && $options.login(...args), [\"enter\"])),\n    class: \"form-control\",\n    placeholder: \"Inserisci la tua password\",\n    required: \"\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.password]])]), _createCommentVNode(\" Bottone Login \"), _cache[6] || (_cache[6] = _createElementVNode(\"div\", {\n    class: \"d-grid mb-3\"\n  }, [_createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Accedi\")], -1 /* HOISTED */))])])])])]), _createCommentVNode(\" <div class=\\\"full\\\">\\n        \\n        <div class=\\\"login\\\">\\n            <h1>Please Login</h1>\\n            <div class=\\\"input\\\">\\n                <input type=\\\"text\\\" v-model=\\\"email\\\" @keyup.enter=\\\"login\\\" placeholder=\\\"Email\\\" />\\n                <input type=\\\"password\\\" v-model=\\\"password\\\" @keyup.enter=\\\"login\\\" placeholder=\\\"Password\\\" />\\n                <button @keyup.enter=\\\"login\\\" v-on:click=\\\"login\\\">Login</button>\\n            </div>\\n            <p class=\\\"error\\\" v-if=\\\"errorMessage\\\" style=\\\"color: red;\\\">{{ errorMessage }}</p>\\n        </div>\\n    </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","class","_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","_hoisted_1","_hoisted_2","style","src","alt","_hoisted_3","_hoisted_4","_hoisted_5","for","id","type","_cache","$event","$data","email","onKeyup","_withKeys","args","$options","login","placeholder","required","_hoisted_6","password"],"sources":["/home/ilaria/kanbanapp/src/components/Login.vue"],"sourcesContent":["<template>\n\n  <!-- Container principale -->\n  <div class=\"container d-flex justify-content-center align-items-center vh-100\">\n        <div class=\"col-12 col-sm-8 col-md-6 col-lg-4\">\n            <div class=\"text-center mb-3\" style=\"width: 100%;\">\n                <img src=\"../assets/logo@2x.png\" alt=\"Logo\" class=\"img-fluid mt-0\" style=\"max-height: 100%; max-width: 100%;\"/>\n            </div>\n            <!-- Card di Login -->\n            <div class=\"card shadow-lg\">\n                <div class=\"card-body p-4\">\n                    <!-- Titolo -->\n                    <h3 class=\"text-center mb-4 fw-bold\">Login</h3>\n                    <!-- Form -->\n                    <form>\n                        <!-- Email -->\n                        <div class=\"mb-3\">\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input id=\"email\" type=\"email\" v-model=\"email\" @keyup.enter=\"login\" class=\"form-control\" placeholder=\"email@example.com\" required>\n                        </div>\n                        <!-- Password -->\n                        <div class=\"mb-3\">\n                            <label for=\"password\" class=\"form-label\">Password</label>\n                            <input id=\"password\" type=\"password\" v-model=\"password\"  @keyup.enter=\"login\" class=\"form-control\"  placeholder=\"Inserisci la tua password\" required>\n                        </div>\n                        <!-- Bottone Login -->\n                        <div class=\"d-grid mb-3\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Accedi</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n\n\n   <!-- <div class=\"full\">\n        \n        <div class=\"login\">\n            <h1>Please Login</h1>\n            <div class=\"input\">\n                <input type=\"text\" v-model=\"email\" @keyup.enter=\"login\" placeholder=\"Email\" />\n                <input type=\"password\" v-model=\"password\" @keyup.enter=\"login\" placeholder=\"Password\" />\n                <button @keyup.enter=\"login\" v-on:click=\"login\">Login</button>\n            </div>\n            <p class=\"error\" v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</p>\n        </div>\n    </div> -->\n</template>\n\n<script>\nimport axios from 'axios'\nimport router from '../routers';\nexport default {\n    name: 'Login',\n\n    data() {\n        return {\n            email: '',\n            password: '',\n            errorMessage: '',\n        }\n    },\n\n    methods: {\n        async login() {\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/login`, {\n                    email: this.email,\n                    password: this.password\n                });\n\n                console.log(response);\n                if (response.status == 200 && Object.keys(response.data).length > 0) { //faccio così con data perchè è di tipo oggetto -> Object.keys(), restituisce un array contenente tutte le chiavi dell'oggetto. Puoi uso .length su quell'array.\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n                    localStorage.setItem(\"id\", JSON.stringify(response.data.user.id));\n                    this.$router.push({ name: 'Home' });\n                } else {\n                    console.warn(\"Login failed, invalid data..\");\n                }\n                \n            } catch (error) {\n                if (this.email.trim() == '' || this.password.trim() == '') { //.trim rimuove gli spazi e gli a capo, controllo se sono vuoti e se uno dei due lo è mando un messaggio di errore\n                    this.errorMessage = 'The field cannot be empty.';\n                } else {\n                    this.errorMessage = 'Incorrect e-mail or password.'; //nel caso siano pieni entrambi, stampo messaggio di errore diverso\n                }\n                console.error(\"Error while logging in:\", error);\n            }\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se è loggato, rimando alla pagina di home\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId) {\n            this.$router.push({ name: 'Home' })\n        }\n    }\n}\n</script>\n\n<style>\n.full{\n    color: #022970;\n}\n.login{\n  width: 400px;\n  height: 410px;\n  display: block;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  background-color: #022970;\n  box-shadow: #2c3e50;\n  border-radius: 10px;\n}\n.login input{\n  width: 300px;\n  height: 40px;\n  padding-left: 10px;\n  display: block;\n  margin-top: auto;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px solid #ffffff;\n}\n.login button:hover{\n  transition: 0.2s ease-in;\n  background-color: #f0f0f0;\n}\n.login button{\n  width: 200px;\n  height: 40px;\n  padding-left: 10px;\n  display: block;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px solid #ffffff;\n  background: #ffffff;\n  color: #022970;\n  cursor: pointer;\n}\n.login h1{\n  color:white; \n  padding-top: 30px; \n  margin: auto;\n  font-size: 25px;\n  font-family: 'Helvetica';\n}\n.input{\n  display: block;\n  padding: 38px;\n  margin-right: auto;\n  margin-left: auto;\n}\n.error{\n  width:400px;\n  background-color: #022970; \n}\n</style>"],"mappings":";OAMqBA,UAA2B;;EAHzCC,KAAK,EAAC;AAAmE;;EACnEA,KAAK,EAAC;AAAmC;;EAKrCA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAe;;EAMbA,KAAK,EAAC;AAAM;;EAKZA,KAAK,EAAC;AAAM;;uBArBzCC,mBAAA,CAAAC,SAAA,SAEEC,mBAAA,0BAA6B,EAC7BC,mBAAA,CA8BQ,OA9BRC,UA8BQ,GA7BFD,mBAAA,CA4BM,OA5BNE,UA4BM,G,0BA3BFF,mBAAA,CAEM;IAFDJ,KAAK,EAAC,kBAAkB;IAACO,KAAoB,EAApB;MAAA;IAAA;MAC1BH,mBAAA,CAA+G;IAA1GI,GAA2B,EAA3BT,UAA2B;IAACU,GAAG,EAAC,MAAM;IAACT,KAAK,EAAC,gBAAgB;IAACO,KAA0C,EAA1C;MAAA;MAAA;IAAA;2BAEvEJ,mBAAA,mBAAsB,EACtBC,mBAAA,CAsBM,OAtBNM,UAsBM,GArBFN,mBAAA,CAoBM,OApBNO,UAoBM,GAnBFR,mBAAA,YAAe,E,0BACfC,mBAAA,CAA+C;IAA3CJ,KAAK,EAAC;EAA0B,GAAC,OAAK,sBAC1CG,mBAAA,UAAa,EACbC,mBAAA,CAeO,eAdHD,mBAAA,WAAc,EACdC,mBAAA,CAGM,OAHNQ,UAGM,G,0BAFFR,mBAAA,CAAmD;IAA5CS,GAAG,EAAC,OAAO;IAACb,KAAK,EAAC;KAAa,OAAK,sB,gBAC3CI,mBAAA,CAAkI;IAA3HU,EAAE,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;IAlB1D,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAkBoEC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAlBjFK,SAAA,KAAAC,IAAA,KAkByFC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAEtB,KAAK,EAAC,cAAc;IAACyB,WAAW,EAAC,mBAAmB;IAACC,QAAQ,EAAR;iEAAjFR,KAAA,CAAAC,KAAK,E,KAEjDhB,mBAAA,cAAiB,EACjBC,mBAAA,CAGM,OAHNuB,UAGM,G,0BAFFvB,mBAAA,CAAyD;IAAlDS,GAAG,EAAC,UAAU;IAACb,KAAK,EAAC;KAAa,UAAQ,sB,gBACjDI,mBAAA,CAAqJ;IAA9IU,EAAE,EAAC,UAAU;IAACC,IAAI,EAAC,UAAU;IAvBhE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuB0EC,KAAA,CAAAU,QAAQ,GAAAX,MAAA;IAAIG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAvB3FK,SAAA,KAAAC,IAAA,KAuBmGC,QAAA,CAAAC,KAAA,IAAAD,QAAA,CAAAC,KAAA,IAAAF,IAAA,CAAK;IAAEtB,KAAK,EAAC,cAAc;IAAEyB,WAAW,EAAC,2BAA2B;IAACC,QAAQ,EAAR;iEAA9FR,KAAA,CAAAU,QAAQ,E,KAE1DzB,mBAAA,mBAAsB,E,0BACtBC,mBAAA,CAEM;IAFDJ,KAAK,EAAC;EAAa,IACpBI,mBAAA,CAA6D;IAArDW,IAAI,EAAC,QAAQ;IAACf,KAAK,EAAC;KAAkB,QAAM,E,gCAY7EG,mBAAA,0kBAWW,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}