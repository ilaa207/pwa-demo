{"ast":null,"code":"import Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Order',\n  data() {\n    return {\n      textContent: '' // Contenuto del file di testo\n      //currentDate: new Date().toLocaleDateString() // Formatta la data\n    };\n  },\n  components: {\n    Header\n  },\n  methods: {\n    async sendOrder() {\n      let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n      // Crea un blob con i dati\n      const blob = new Blob([this.textContent], {\n        type: 'text/plain'\n      });\n\n      // Crea un oggetto File\n      const file = new File([blob], `test.dat`, {\n        type: 'text/plain'\n      }); //Ordine${this.currentDate}\n\n      const formData = new FormData();\n      formData.append('file', file); // Aggiungi il file direttamente\n\n      try {\n        let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, formData, {\n          headers: {\n            'authorization': `Bearer ${token}`,\n            'accept': 'application/json'\n          }\n        });\n        this.textContent = '';\n        console.log(response);\n        alert(\"Order sent!\");\n      } catch (error) {\n        console.error(\"Sending failed, error:\", error);\n        alert(\"Order not sent!\");\n      }\n    }\n  },\n  showPopup() {\n    const showPopup = document.querySelector('.show-popup');\n    const popupContainer = document.querySelector('.popup-container');\n    const closeBtn = document.querySelector('.close-btn');\n    showPopup.onclick = () => {\n      popupContainer.classList.add('active');\n    };\n    closeBtn.onclick = () => {\n      popupContainer.classList.remove('active');\n    };\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId == null) {\n      this.$route;\n    }\n  }\n};","map":{"version":3,"names":["Header","axios","name","data","textContent","components","methods","sendOrder","token","localStorage","getItem","replace","blob","Blob","type","file","File","formData","FormData","append","response","post","headers","console","log","alert","error","showPopup","document","querySelector","popupContainer","closeBtn","onclick","classList","add","remove","mounted","userId","$route"],"sources":["/home/ilaria/kanbanapp/src/components/Order.vue"],"sourcesContent":["<template>\n    <Header />\n    <div class=\"popup-container\">\n        <div class=\"popup-box\">\n            <h1>Hello World!</h1>\n            <p>igfunucnof</p>\n            <button class=\"close-btn\">\n                Ok\n            </button>\n        </div>\n    </div>\n    <div class=\"editor\">\n        <h2>New Order</h2>\n        <h3>Benvenuto nella sezione nuovo ordine!</h3>\n        <ul>\n            <li>Collega il lettore di barcode al dispositivo tramite Bluetooth.</li>\n            <li>Una volta collegato il lettore, posizionati nella casella di testo sottostante per cominciare a inserire\n                l'ordine.</li>\n            <li>Leggi i barcode con il dispositivo collegato (verranno automaticamente inseriti nella casella di testo)\n            </li>\n            <li>Controlla sempre che sia stato inserito il barcode corretto!</li>\n            <li>Una volta terminato l'inserimento dei codici clicca su 'Send' per inviare il tuo ordine!</li>\n        </ul>\n        <textarea v-model=\"textContent\" placeholder=\"Write here...\"></textarea>\n        <div class=\"send\">\n            <button v-on:click=\"sendOrder\">Send</button>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Order',\n    data() {\n        return {\n            textContent: '', // Contenuto del file di testo\n            //currentDate: new Date().toLocaleDateString() // Formatta la data\n        };\n    },\n    components: {\n        Header\n    },\n    methods: {\n        async sendOrder() {\n            let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n            // Crea un blob con i dati\n            const blob = new Blob([this.textContent], { type: 'text/plain' });\n\n            // Crea un oggetto File\n            const file = new File([blob], `test.dat`, { type: 'text/plain' }); //Ordine${this.currentDate}\n\n            const formData = new FormData();\n            formData.append('file', file); // Aggiungi il file direttamente\n\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, formData, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n                \n                this.textContent = '';\n                console.log(response);\n                alert(\"Order sent!\");\n\n            } catch (error) {\n                console.error(\"Sending failed, error:\", error);\n                alert(\"Order not sent!\");\n            }\n        }\n    },\n\n    showPopup(){\n        const showPopup = document.querySelector('.show-popup');\nconst popupContainer = document.querySelector('.popup-container');\nconst closeBtn = document.querySelector('.close-btn');\nshowPopup.onclick = () => {\n    popupContainer.classList.add('active');\n}\ncloseBtn.onclick = () => {\n    popupContainer.classList.remove('active');\n}\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$route \n        }\n    }\n}\n</script>\n\n<style>\n\n.popup-container {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, .3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0;\n  pointer-events: none;\n}\n.popup-container.active {\n  opacity: 1;\n  pointer-events: auto;\n  transition: .4s ease;\n}\n.popup-container .popup-box {\n  width: 500px;\n  background: #f2f2f2;\n  border-radius: 6px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, .1);\n  padding: 30px;\n  transform: scale(0);\n}\n.popup-box h1 {\n  color: #333;\n  line-height: 1;\n}\n.popup-box p {\n  color: #333;\n  margin: 12px 0 20px;\n}\n.popup-box .close-btn {\n  width: 100%;\n  height: 45px;\n  background: #6e78ff;\n  border-radius: 6px;\n  border: none;\n  outline: none;\n  box-shadow: 0 0 10px rgba(0, 0, 0, .1);\n  cursor: pointer;\n  font-size: 18px;\n  color: #f2f2f2;\n  font-weight: 500;\n}\n</style>"],"mappings":"AAgCA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,EAAE,CAAE;MACjB;IACJ,CAAC;EACL,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAO,EAAE;IACL,MAAMC,SAASA,CAAA,EAAG;MACd,IAAIC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;;MAE7D;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC,IAAI,CAACT,WAAW,CAAC,EAAE;QAAEU,IAAI,EAAE;MAAa,CAAC,CAAC;;MAEjE;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAACJ,IAAI,CAAC,EAAE,UAAU,EAAE;QAAEE,IAAI,EAAE;MAAa,CAAC,CAAC,EAAE;;MAEnE,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC,EAAE;;MAE/B,IAAI;QACA,IAAIK,QAAO,GAAI,MAAMnB,KAAK,CAACoB,IAAI,CAAC,4EAA4E,EAAEJ,QAAQ,EAAE;UACpHK,OAAO,EAAE;YACL,eAAe,EAAE,UAAUd,KAAK,EAAE;YAClC,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QAEF,IAAI,CAACJ,WAAU,GAAI,EAAE;QACrBmB,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;QACrBK,KAAK,CAAC,aAAa,CAAC;MAExB,EAAE,OAAOC,KAAK,EAAE;QACZH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CD,KAAK,CAAC,iBAAiB,CAAC;MAC5B;IACJ;EACJ,CAAC;EAEDE,SAASA,CAAA,EAAE;IACP,MAAMA,SAAQ,GAAIC,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;IAC/D,MAAMC,cAAa,GAAIF,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;IACjE,MAAME,QAAO,GAAIH,QAAQ,CAACC,aAAa,CAAC,YAAY,CAAC;IACrDF,SAAS,CAACK,OAAM,GAAI,MAAM;MACtBF,cAAc,CAACG,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAC1C;IACAH,QAAQ,CAACC,OAAM,GAAI,MAAM;MACrBF,cAAc,CAACG,SAAS,CAACE,MAAM,CAAC,QAAQ,CAAC;IAC7C;EACI,CAAC;EACD;EACAC,OAAOA,CAAA,EAAG;IACN,IAAIC,MAAK,GAAI5B,YAAY,CAACC,OAAO,CAAC,IAAI;IACtC,IAAI2B,MAAK,IAAK,IAAI,EAAE;MAChB,IAAI,CAACC,MAAK;IACd;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}