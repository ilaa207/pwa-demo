{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Client',\n  data() {\n    return {\n      costumers: []\n    };\n  },\n  components: {\n    Header\n  },\n  methods: {\n    async chooseCostumers() {\n      let token = sessionStorage.getItem('token').replace(/\"/g, '');\n      try {\n        let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/index`, {\n          headers: {\n            'authorization': `Bearer ${token}`,\n            'accept': 'application/json'\n          }\n        });\n        console.log(\"Cliente\", response);\n        sessionStorage.setItem(\"costumers\", JSON.stringify(response.data.customers));\n        this.costumers = response.data.customers;\n      } catch (error) {\n        console.warn(\"Error: \", error);\n      }\n    }\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = sessionStorage.getItem('token');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n    this.chooseCostumers();\n  }\n};","map":{"version":3,"names":["Header","axios","name","data","costumers","components","methods","chooseCostumers","token","sessionStorage","getItem","replace","response","get","headers","console","log","setItem","JSON","stringify","customers","error","warn","mounted","userId","$router","push"],"sources":["/home/ilaria/kanbanapp/src/components/Client.vue"],"sourcesContent":["<template>\n    <Header />\n    <div id=\"display-clients\" class=\"d-flex flex-column\">\n        <ul class=\"list-group list-group-flush\">\n            <li v-for=\"costumer in costumers\" :key=\"costumer.id\" class=\"client-list list-group-item\">\n                <a @click=\"this.$router.push({ name: 'Home', params: { costumerId: costumer.id, customerName: costumer.nome_azienda } }); \"\n                    class=\"text-decoration-none\">\n                    {{ costumer.nome_azienda }}\n                    <i class=\"bi bi-chevron-right\"></i>\n                </a>\n\n            </li>\n        </ul>\n    </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Client',\n    data() {\n        return {\n            costumers: [],\n        };\n    },\n    components: {\n        Header\n    },\n    methods: {\n        async chooseCostumers() {\n            let token = sessionStorage.getItem('token').replace(/\"/g, '');\n            try {\n                let response = await axios.get(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/customer/index`, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n\n                console.log(\"Cliente\", response);\n                sessionStorage.setItem(\"costumers\", JSON.stringify(response.data.customers));\n                this.costumers = response.data.customers;\n            } catch (error) {\n                console.warn(\"Error: \", error)\n            }\n        },\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        let userId = sessionStorage.getItem('token');\n        \n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n        this.chooseCostumers();\n\n\n    }\n}\n</script>"],"mappings":";AAkBA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACzB,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,SAAS,EAAE;IACf,CAAC;EACL,CAAC;EACDC,UAAU,EAAE;IACRL;EACJ,CAAC;EACDM,OAAO,EAAE;IACL,MAAMC,eAAeA,CAAA,EAAG;MACpB,IAAIC,KAAI,GAAIC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAC7D,IAAI;QACA,IAAIC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,2EAA2E,EAAE;UACxGC,OAAO,EAAE;YACL,eAAe,EAAE,UAAUN,KAAK,EAAE;YAClC,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QAEFO,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEJ,QAAQ,CAAC;QAChCH,cAAc,CAACQ,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ,CAACT,IAAI,CAACiB,SAAS,CAAC,CAAC;QAC5E,IAAI,CAAChB,SAAQ,GAAIQ,QAAQ,CAACT,IAAI,CAACiB,SAAS;MAC5C,EAAE,OAAOC,KAAK,EAAE;QACZN,OAAO,CAACO,IAAI,CAAC,SAAS,EAAED,KAAK;MACjC;IACJ;EACJ,CAAC;EACD;EACAE,OAAOA,CAAA,EAAG;IACN,IAAIC,MAAK,GAAIf,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC;IAE5C,IAAIc,MAAK,IAAK,IAAI,EAAE;MAChB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAExB,IAAI,EAAE;MAAQ,CAAC;IACvC;IACA,IAAI,CAACK,eAAe,CAAC,CAAC;EAG1B;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}