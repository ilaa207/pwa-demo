{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"editor\"\n};\nconst _hoisted_2 = {\n  class: \"accept\"\n};\nconst _hoisted_3 = {\n  class: \"reset\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createElementVNode(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", null, \"Accept Order\", -1 /* HOISTED */)), _cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"Benvenuto nella sezione accetta ordine!\", -1 /* HOISTED */)), _cache[6] || (_cache[6] = _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"Collega il lettore di barcode al dispositivo tramite Bluetooth.\"), _createElementVNode(\"li\", null, \"Una volta collegato il lettore, posizionati nella casella di testo sottostante per cominciare a inserire i barcode degli articoli da accettare.\"), _createElementVNode(\"li\", null, \"Leggi i barcode con il dispositivo collegato (verranno automaticamente inseriti nella casella di testo) \"), _createElementVNode(\"li\", null, \"Controlla sempre che sia stato inserito il barcode corretto!\"), _createElementVNode(\"li\", null, \"Una volta terminato l'inserimento dei codici clicca su 'Accept' per accetare l'ordine!\")], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.textContent = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => _ctx.update && _ctx.update(...args), [\"onEnter\"])),\n    placeholder: \"Write here...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.textContent]]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.acceptOrder && $options.acceptOrder(...args))\n  }, \"Accept\")]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"button\", {\n    id: \"reset\",\n    class: \"btn btn-primary\",\n    onClick: _cache[3] || (_cache[3] = $event => this.textContent = '')\n  }, \"Reset\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_Header","_createElementVNode","_hoisted_1","_cache","$event","$data","textContent","onKeyup","_withKeys","args","_ctx","update","placeholder","_hoisted_2","onClick","$options","acceptOrder","_hoisted_3","id"],"sources":["/home/ilaria/kanbanapp/src/components/Accept.vue"],"sourcesContent":["<template>\n    <Header />\n    <div class=\"editor\">\n        <h2>Accept Order</h2>\n        <h3>Benvenuto nella sezione accetta ordine!</h3>\n        <ul>\n            <li>Collega il lettore di barcode al dispositivo tramite Bluetooth.</li>\n            <li>Una volta collegato il lettore, posizionati nella casella di testo sottostante per cominciare a inserire\n                i barcode degli articoli da accettare.</li>\n            <li>Leggi i barcode con il dispositivo collegato (verranno automaticamente inseriti nella casella di testo)\n            </li>\n            <li>Controlla sempre che sia stato inserito il barcode corretto!</li>\n            <li>Una volta terminato l'inserimento dei codici clicca su 'Accept' per accetare l'ordine!</li>\n        </ul>\n        <textarea v-model=\"textContent\" @keyup.onEnter=\"update\" placeholder=\"Write here...\"></textarea>\n        <div class=\"accept\">\n            <button v-on:click=\"acceptOrder\">Accept</button>\n        </div>\n        <div class=\"reset\">\n            <button id=\"reset\" class=\"btn btn-primary\" v-on:click=\"this.textContent=''\">Reset</button>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Ordine',\n    data() {\n        return {\n            textContent: '', // Contenuto del file di testo\n            //currentDate: new Date().toLocaleDateString() // Formatta la data\n        };\n    },\n    components: {\n        Header\n    },\n    methods: {\n        async acceptOrder() {\n            let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n            // Crea un blob con i dati\n            const blob = new Blob([this.textContent], { type: 'text/plain' });\n\n            // Crea un oggetto File\n            const file = new File([blob], `test.dat`, { type: 'text/plain' }); //Ordine${this.currentDate}\n\n            const formData = new FormData();\n            formData.append('file', file); // Aggiungi il file direttamente\n\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/acceptFromFile`, formData, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n\n                console.log(response);\n                alert(\"Order accepted!\");\n\n            } catch (error) {\n                console.error(\"Failed acceptance, error:\", error);\n                alert(\"Order not accepted!\");\n            }\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non Ã¨ loggato, rimando alla pagina di login\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n}\n</script>\n\n<style>\n.accept button{\n    float: left;\n  width: 30%;\n  height: 60px;\n  padding-left: 10px;\n  display: block;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-right: 60px;\n  margin-left: 10%;\n  border: 1px solid #022970;\n  border-radius: 5px;\n  background: #022970;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 2em;\n}\n.accept button:hover{\n  transition: 0.2s ease-in;\n  background-color: #002390;\n}\n.reset button{\n  float: right;\n  width: 30%;\n  height: 60px;\n  padding-left: 10px;\n  display: block;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-right: 10%;\n  margin-left: 30px;\n  border: 1px solid #c5c7c4;\n  border-radius: 5px;\n  background: #c5c7c4;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 2em;\n}\n.reset button:hover{\n  transition: 0.2s ease-in;\n  background-color: #002390;\n}\n</style>"],"mappings":";;EAESA,KAAK,EAAC;AAAQ;;EAaVA,KAAK,EAAC;AAAQ;;EAGdA,KAAK,EAAC;AAAO;;;uBAlB1BC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAUC,iBAAA,GACVC,mBAAA,CAmBM,OAnBNC,UAmBM,G,0BAlBFD,mBAAA,CAAqB,YAAjB,cAAY,sB,0BAChBA,mBAAA,CAAgD,YAA5C,yCAAuC,sB,0BAC3CA,mBAAA,CAQK,aAPDA,mBAAA,CAAwE,YAApE,iEAA+D,GACnEA,mBAAA,CAC+C,YAD3C,iJACsC,GAC1CA,mBAAA,CACK,YADD,0GACJ,GACAA,mBAAA,CAAqE,YAAjE,8DAA4D,GAChEA,mBAAA,CAA+F,YAA3F,wFAAsF,E,sCAE9FA,mBAAA,CAA+F;IAdvG,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAc2BC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAd9CK,SAAA,KAAAC,IAAA,KAcwDC,IAAA,CAAAC,MAAA,IAAAD,IAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;IAAEG,WAAW,EAAC;iEAAjDP,KAAA,CAAAC,WAAW,E,GAC9BL,mBAAA,CAEM,OAFNY,UAEM,GADFZ,mBAAA,CAAgD;IAAnCa,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEM,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAP,IAAA,CAAW;KAAE,QAAM,E,GAE3CR,mBAAA,CAEM,OAFNgB,UAEM,GADFhB,mBAAA,CAA0F;IAAlFiB,EAAE,EAAC,OAAO;IAACtB,KAAK,EAAC,iBAAiB;IAAMkB,OAAK,EAAAX,MAAA,QAAAA,MAAA,MAAAC,MAAA,SAAOE,WAAW;KAAK,OAAK,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}