{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderSlot as _renderSlot, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"modal fade\",\n  id: \"exampleModal\",\n  tabindex: \"-1\",\n  \"aria-labelledby\": \"exampleModalLabel\",\n  \"aria-hidden\": \"true\",\n  ref: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-dialog\"\n};\nconst _hoisted_3 = {\n  class: \"modal-content\"\n};\nconst _hoisted_4 = {\n  class: \"modal-header\"\n};\nconst _hoisted_5 = {\n  class: \"modal-title\",\n  id: \"exampleModalLabel\"\n};\nconst _hoisted_6 = {\n  class: \"modal-body\"\n};\nconst _hoisted_7 = {\n  class: \"modal-footer\"\n};\nconst _hoisted_8 = {\n  class: \"editor\"\n};\nconst _hoisted_9 = {\n  class: \"send\"\n};\nconst _hoisted_10 = {\n  class: \"reset\"\n};\nexport function render(_ctx, _cache) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"h5\", _hoisted_5, _toDisplayString(_ctx.title), 1 /* TEXT */), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn-close\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.closeModal && _ctx.closeModal(...args)),\n    \"aria-label\": \"Close\"\n  })]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"p\", null, _toDisplayString(_ctx.message), 1 /* TEXT */), _renderSlot(_ctx.$slots, \"default\")]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-secondary\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.closeModal && _ctx.closeModal(...args))\n  }, \"Chiudi\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-primary\",\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.confirm && _ctx.confirm(...args))\n  }, \"Conferma\")])])])], 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_8, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"New Order\", -1 /* HOISTED */)), _cache[7] || (_cache[7] = _createElementVNode(\"h3\", null, \"Benvenuto nella sezione nuovo ordine!\", -1 /* HOISTED */)), _cache[8] || (_cache[8] = _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, \"Collega il lettore di barcode al dispositivo tramite Bluetooth.\"), _createElementVNode(\"li\", null, \"Una volta collegato il lettore, posizionati nella casella di testo sottostante per cominciare a inserire l'ordine.\"), _createElementVNode(\"li\", null, \"Leggi i barcode con il dispositivo collegato (verranno automaticamente inseriti nella casella di testo) \"), _createElementVNode(\"li\", null, \"Controlla sempre che sia stato inserito il barcode corretto!\"), _createElementVNode(\"li\", null, \"Una volta terminato l'inserimento dei codici clicca su 'Send' per inviare il tuo ordine!\")], -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.textContent = $event),\n    placeholder: \"Write here...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.textContent]]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"button\", {\n    id: \"send\",\n    class: \"btn btn-primary\",\n    onClick: _cache[4] || (_cache[4] = (...args) => _ctx.sendOrder && _ctx.sendOrder(...args))\n  }, \"Send\")]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    id: \"reset\",\n    class: \"btn btn-primary\",\n    onClick: _cache[5] || (_cache[5] = $event => this.textContent = '')\n  }, \"Reset\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","id","tabindex","ref","_createElementBlock","_Fragment","_createVNode","_component_Header","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_toDisplayString","_ctx","title","type","onClick","_cache","args","closeModal","_hoisted_6","message","_renderSlot","$slots","_hoisted_7","confirm","_hoisted_8","$event","textContent","placeholder","_hoisted_9","sendOrder","_hoisted_10"],"sources":["/home/ilaria/kanbanapp/src/components/Order.vue"],"sourcesContent":["<template>\n    <Header />\n    <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" ref=\"modal\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ title }}</h5>\n          <button type=\"button\" class=\"btn-close\" @click=\"closeModal\" aria-label=\"Close\"></button>\n        </div>\n        <div class=\"modal-body\">\n          <p>{{ message }}</p>\n          <slot></slot>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">Chiudi</button>\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"confirm\">Conferma</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n\n\n    <div class=\"editor\">\n        <h2>New Order</h2>\n        <h3>Benvenuto nella sezione nuovo ordine!</h3>\n        <ul>\n            <li>Collega il lettore di barcode al dispositivo tramite Bluetooth.</li>\n            <li>Una volta collegato il lettore, posizionati nella casella di testo sottostante per cominciare a inserire\n                l'ordine.</li>\n            <li>Leggi i barcode con il dispositivo collegato (verranno automaticamente inseriti nella casella di testo)\n            </li>\n            <li>Controlla sempre che sia stato inserito il barcode corretto!</li>\n            <li>Una volta terminato l'inserimento dei codici clicca su 'Send' per inviare il tuo ordine!</li>\n        </ul>\n        <textarea v-model=\"textContent\" placeholder=\"Write here...\"></textarea>\n        <div class=\"send\">\n            <button id=\"send\" class=\"btn btn-primary\" v-on:click=\"sendOrder\">Send</button>\n        </div>\n        <div class=\"reset\">\n            <button id=\"reset\" class=\"btn btn-primary\" v-on:click=\"this.textContent=''\">Reset</button>\n        </div>\n    </div>\n\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n    name: 'Order',\n    props: {\n    title: {\n      type: String,\n      default: 'Titolo Modale'\n    },\n    message: {\n      type: String,\n      default: 'Questo è un messaggio nel modale.'\n    }\n  },\n    data() {\n        return {\n            textContent: '', // Contenuto del file di testo\n            //currentDate: new Date().toLocaleDateString() // Formatta la data\n        };\n    },\n    components: {\n        Header\n    },\n    methods: {\n        closeModal() {\n      const modal = this.$refs.modal;\n      const bootstrapModal = bootstrap.Modal.getInstance(modal);\n      bootstrapModal.hide();\n    },\n    confirm() {\n      this.$emit('confirm');\n      this.closeModal();\n    }\n  },\n\n\n        async sendOrder() {\n            let token = localStorage.getItem('token').replace(/\"/g, ''); // Rimuovo le virgolette\n\n            // Crea un blob con i dati\n            const blob = new Blob([this.textContent], { type: 'text/plain' });\n\n            // Crea un oggetto File\n            const file = new File([blob], `test.dat`, { type: 'text/plain' }); //Ordine${this.currentDate}\n\n            const formData = new FormData();\n            formData.append('file', file); // Aggiungi il file direttamente\n\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, formData, {\n                    headers: {\n                        'authorization': `Bearer ${token}`,\n                        'accept': 'application/json',\n                    },\n                });\n                this.textContent = '';\n                console.log(response);\n                alert(\"Order sent!\");\n\n            } catch (error) {\n                console.error(\"Sending failed, error:\", error);\n                alert(\"Order not sent!\");\n            }\n        }\n    },\n\n    \n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$route \n        }\n        const modal = new bootstrap.Modal(this.$refs.modal);\n        this.$refs.modal.addEventListener('hidden.bs.modal', () => {\n      this.$emit('close');\n    });\n    }\n}\n</script>\n\n<style>\n\n.send button{\n  float: left;\n  width: 30%;\n  height: 60px;\n  padding-left: 10px;\n  display: block;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-right: 60px;\n  margin-left: 10%;\n  border: 1px solid #022970;\n  border-radius: 5px;\n  background: #022970;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 2em;\n}\n.send button:hover{\n  transition: 0.2s ease-in;\n  background-color: #002390;\n}\n.reset button{\n  float: right;\n  width: 30%;\n  height: 60px;\n  padding-left: 10px;\n  display: block;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  margin-right: 10%;\n  margin-left: 30px;\n  border: 1px solid #be0202;\n  border-radius: 5px;\n  background: #be0202;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 2em;\n}\n.reset button:hover{\n  transition: 0.2s ease-in;\n  background-color: #002390;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}