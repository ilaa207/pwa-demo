{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nimport _imports_0 from '../assets/logo@2x.png';\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Container principale \"), _cache[0] || (_cache[0] = _createStaticVNode(\"<div class=\\\"container d-flex justify-content-center align-items-center vh-100\\\"><div class=\\\"col-12 col-sm-8 col-md-6 col-lg-4\\\"><div class=\\\"text-center mb-3\\\"><img src=\\\"\" + _imports_0 + \"\\\" alt=\\\"Logo\\\" style=\\\"max-width:150px;\\\"></div><!-- Card di Login --><div class=\\\"card shadow-lg\\\"><div class=\\\"card-body p-4\\\"><!-- Titolo --><h3 class=\\\"text-center text-primary mb-4 fw-bold\\\">Login</h3><!-- Form --><form><!-- Email --><div class=\\\"mb-3\\\"><label for=\\\"email\\\" class=\\\"form-label\\\">Email</label><input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"Inserisci la tua email\\\" required></div><!-- Password --><div class=\\\"mb-3\\\"><label for=\\\"password\\\" class=\\\"form-label\\\">Password</label><input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Inserisci la tua password\\\" required></div><!-- Bottone Login --><div class=\\\"d-grid mb-3\\\"><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Accedi</button></div></form></div></div></div></div>\", 1)), _createCommentVNode(\" <div class=\\\"full\\\">\\n        \\n        <div class=\\\"login\\\">\\n            <h1>Please Login</h1>\\n            <div class=\\\"input\\\">\\n                <input type=\\\"text\\\" v-model=\\\"email\\\" @keyup.enter=\\\"login\\\" placeholder=\\\"Email\\\" />\\n                <input type=\\\"password\\\" v-model=\\\"password\\\" @keyup.enter=\\\"login\\\" placeholder=\\\"Password\\\" />\\n                <button @keyup.enter=\\\"login\\\" v-on:click=\\\"login\\\">Login</button>\\n            </div>\\n            <p class=\\\"error\\\" v-if=\\\"errorMessage\\\" style=\\\"color: red;\\\">{{ errorMessage }}</p>\\n        </div>\\n    </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_imports_0","_createElementBlock","_Fragment","_createCommentVNode","_createStaticVNode"],"sources":["/home/ilaria/kanbanapp/src/components/Login.vue"],"sourcesContent":["<template>\n\n  <!-- Container principale -->\n  <div class=\"container d-flex justify-content-center align-items-center vh-100\">\n        <div class=\"col-12 col-sm-8 col-md-6 col-lg-4\">\n            <div class=\"text-center mb-3\">\n                <img src=\"../assets/logo@2x.png\" alt=\"Logo\" style=\"max-width: 150px;\"/>\n            </div>\n            <!-- Card di Login -->\n            <div class=\"card shadow-lg\">\n                <div class=\"card-body p-4\">\n                    <!-- Titolo -->\n                    <h3 class=\"text-center text-primary mb-4 fw-bold\">Login</h3>\n                    <!-- Form -->\n                    <form>\n                        <!-- Email -->\n                        <div class=\"mb-3\">\n                            <label for=\"email\" class=\"form-label\">Email</label>\n                            <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Inserisci la tua email\" required>\n                        </div>\n                        <!-- Password -->\n                        <div class=\"mb-3\">\n                            <label for=\"password\" class=\"form-label\">Password</label>\n                            <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Inserisci la tua password\" required>\n                        </div>\n                        <!-- Bottone Login -->\n                        <div class=\"d-grid mb-3\">\n                            <button type=\"submit\" class=\"btn btn-primary\">Accedi</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n\n\n\n   <!-- <div class=\"full\">\n        \n        <div class=\"login\">\n            <h1>Please Login</h1>\n            <div class=\"input\">\n                <input type=\"text\" v-model=\"email\" @keyup.enter=\"login\" placeholder=\"Email\" />\n                <input type=\"password\" v-model=\"password\" @keyup.enter=\"login\" placeholder=\"Password\" />\n                <button @keyup.enter=\"login\" v-on:click=\"login\">Login</button>\n            </div>\n            <p class=\"error\" v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</p>\n        </div>\n    </div> -->\n</template>\n\n<script>\nimport axios from 'axios'\nimport router from '../routers';\nexport default {\n    name: 'Login',\n\n    data() {\n        return {\n            email: '',\n            password: '',\n            errorMessage: '',\n        }\n    },\n\n    methods: {\n        async login() {\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/login`, {\n                    email: this.email,\n                    password: this.password\n                });\n\n                console.log(response);\n                if (response.status == 200 && Object.keys(response.data).length > 0) { //faccio così con data perchè è di tipo oggetto -> Object.keys(), restituisce un array contenente tutte le chiavi dell'oggetto. Puoi uso .length su quell'array.\n                    localStorage.setItem(\"token\", JSON.stringify(response.data.token));\n                    localStorage.setItem(\"id\", JSON.stringify(response.data.user.id));\n                    this.$router.push({ name: 'Home' });\n                } else {\n                    console.warn(\"Login failed, invalid data..\");\n                }\n                \n            } catch (error) {\n                if (this.email.trim() == '' || this.password.trim() == '') { //.trim rimuove gli spazi e gli a capo, controllo se sono vuoti e se uno dei due lo è mando un messaggio di errore\n                    this.errorMessage = 'The field cannot be empty.';\n                } else {\n                    this.errorMessage = 'Incorrect e-mail or password.'; //nel caso siano pieni entrambi, stampo messaggio di errore diverso\n                }\n                console.error(\"Error while logging in:\", error);\n            }\n        }\n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se è loggato, rimando alla pagina di home\n    mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId) {\n            this.$router.push({ name: 'Home' })\n        }\n    }\n}\n</script>\n\n<style>\n.full{\n    color: #022970;\n}\n.login{\n  width: 400px;\n  height: 410px;\n  display: block;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  background-color: #022970;\n  box-shadow: #2c3e50;\n  border-radius: 10px;\n}\n.login input{\n  width: 300px;\n  height: 40px;\n  padding-left: 10px;\n  display: block;\n  margin-top: auto;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px solid #ffffff;\n}\n.login button:hover{\n  transition: 0.2s ease-in;\n  background-color: #f0f0f0;\n}\n.login button{\n  width: 200px;\n  height: 40px;\n  padding-left: 10px;\n  display: block;\n  margin-bottom: 30px;\n  margin-right: auto;\n  margin-left: auto;\n  border: 1px solid #ffffff;\n  background: #ffffff;\n  color: #022970;\n  cursor: pointer;\n}\n.login h1{\n  color:white; \n  padding-top: 30px; \n  margin: auto;\n  font-size: 25px;\n  font-family: 'Helvetica';\n}\n.input{\n  display: block;\n  padding: 38px;\n  margin-right: auto;\n  margin-left: auto;\n}\n.error{\n  width:400px;\n  background-color: #022970; \n}\n</style>"],"mappings":";OAMqBA,UAA2B;;uBANhDC,mBAAA,CAAAC,SAAA,SAEEC,mBAAA,0BAA6B,E,0BAF/BC,kBAAA,mLAAAJ,UAAA,yyBAuCGG,mBAAA,0kBAWW,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}