{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list-group list-group-flush\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Header = _resolveComponent(\"Header\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Header), _cache[8] || (_cache[8] = _createStaticVNode(\"<nav style=\\\"--bs-breadcrumb-divider:&#39;&gt;&#39;;\\\" aria-label=\\\"breadcrumb\\\"><ol class=\\\"breadcrumb\\\"><li class=\\\"breadcrumb-item\\\"><a href=\\\"#\\\">Home</a></li><li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Library</li></ol></nav>\", 1)), _createElementVNode(\"h1\", null, \"Ordine n° \" + _toDisplayString(this.orderId), 1 /* TEXT */), _createElementVNode(\"ul\", _hoisted_1, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.items, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id,\n      class: \"client-list list-group-item\"\n    }, [_createTextVNode(\" ID articolo: \" + _toDisplayString(item.id) + \" \", 1 /* TEXT */), _cache[0] || (_cache[0] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\"  Codice cliente: \" + _toDisplayString(item.cod_articolo_cliente) + \" \", 1 /* TEXT */), _cache[1] || (_cache[1] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\"  Codice fornitore: \" + _toDisplayString(item.cod_articolo_fornitore) + \" \", 1 /* TEXT */), _cache[2] || (_cache[2] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\"  N. vaschette: \" + _toDisplayString(item.n_vaschette) + \" \", 1 /* TEXT */), _cache[3] || (_cache[3] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\"  Qta. evasa: \" + _toDisplayString(item.qta_evasa) + \" \", 1 /* TEXT */), _cache[4] || (_cache[4] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\"  Ripiano: \" + _toDisplayString(item.ripiano) + \" \", 1 /* TEXT */), _cache[5] || (_cache[5] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\"  Scaffale: \" + _toDisplayString(item.scaffale) + \" \", 1 /* TEXT */), _cache[6] || (_cache[6] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createTextVNode(\"  Descrizione: \" + _toDisplayString(item.descrizione), 1 /* TEXT */), _cache[7] || (_cache[7] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */))]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createVNode","_component_Header","_createStaticVNode","_createElementVNode","_toDisplayString","orderId","_hoisted_1","_renderList","$data","items","item","key","id","_createTextVNode","cod_articolo_cliente","cod_articolo_fornitore","n_vaschette","qta_evasa","ripiano","scaffale","descrizione"],"sources":["/home/ilaria/kanbanapp/src/components/OpenOrder.vue"],"sourcesContent":["<template>\n    <Header />\n    <nav style=\"--bs-breadcrumb-divider: '>';\" aria-label=\"breadcrumb\">\n  <ol class=\"breadcrumb\">\n    <li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\n    <li class=\"breadcrumb-item active\" aria-current=\"page\">Library</li>\n  </ol>\n</nav>\n    <h1>Ordine n° {{ this.orderId }}</h1>\n    <ul class=\"list-group list-group-flush\">\n        <li v-for=\"item in items\" :key=\"item.id\" class=\"client-list list-group-item\">\n            ID articolo: {{ item.id }} <br>\n            \n            &emsp;Codice cliente: {{ item.cod_articolo_cliente }} <br>\n            &emsp;Codice fornitore: {{ item.cod_articolo_fornitore }} <br>\n            &emsp;N. vaschette: {{ item.n_vaschette }} <br>\n            &emsp;Qta. evasa: {{ item.qta_evasa }} <br>\n            &emsp;Ripiano: {{ item.ripiano }} <br>\n            &emsp;Scaffale: {{ item.scaffale }} <br>\n            &emsp;Descrizione: {{ item.descrizione }}<br> \n        </li>\n    </ul>\n</template>\n\n<script>\nimport Header from './Header.vue';\nexport default {\n    name: 'OpenOrder',\n    data() {\n        return {\n            orderId: null,\n            items: [],\n        };\n    },\n    components: {\n        Header,\n    },\n    methods: {\n        \n    },\n    //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n    mounted() {\n        this.items = JSON.parse(this.$route.params.items);\n        console.log(\"Items:\", this.items);\n        this.orderId = this.$route.params.orderId;\n        \n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n}\n</script>\n"],"mappings":";;EASQA,KAAK,EAAC;AAA6B;;;uBAT3CC,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAUC,iBAAA,G,0BADdC,kBAAA,+PAQIC,mBAAA,CAAqC,YAAjC,YAAU,GAAAC,gBAAA,MAAQC,OAAO,kBAC7BF,mBAAA,CAYK,MAZLG,UAYK,I,kBAXDR,mBAAA,CAUKC,SAAA,QApBbQ,WAAA,CAU2BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfZ,mBAAA,CAUK;MAVsBa,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEf,KAAK,EAAC;QAVvDgB,gBAAA,CAUqF,gBAC5D,GAAAT,gBAAA,CAAGM,IAAI,CAACE,EAAE,IAAG,GAAC,iB,0BAAAT,mBAAA,CAAI,sCAX3CU,gBAAA,CAW2C,oBAET,GAAAT,gBAAA,CAAGM,IAAI,CAACI,oBAAoB,IAAG,GAAC,iB,0BAAAX,mBAAA,CAAI,sCAbtEU,gBAAA,CAasE,sBAClC,GAAAT,gBAAA,CAAGM,IAAI,CAACK,sBAAsB,IAAG,GAAC,iB,0BAAAZ,mBAAA,CAAI,sCAd1EU,gBAAA,CAc0E,kBAC1C,GAAAT,gBAAA,CAAGM,IAAI,CAACM,WAAW,IAAG,GAAC,iB,0BAAAb,mBAAA,CAAI,sCAf3DU,gBAAA,CAe2D,gBAC7B,GAAAT,gBAAA,CAAGM,IAAI,CAACO,SAAS,IAAG,GAAC,iB,0BAAAd,mBAAA,CAAI,sCAhBvDU,gBAAA,CAgBuD,aAC5B,GAAAT,gBAAA,CAAGM,IAAI,CAACQ,OAAO,IAAG,GAAC,iB,0BAAAf,mBAAA,CAAI,sCAjBlDU,gBAAA,CAiBkD,cACtB,GAAAT,gBAAA,CAAGM,IAAI,CAACS,QAAQ,IAAG,GAAC,iB,0BAAAhB,mBAAA,CAAI,sCAlBpDU,gBAAA,CAkBoD,iBACrB,GAAAT,gBAAA,CAAGM,IAAI,CAACU,WAAW,kB,0BAAGjB,mBAAA,CAAI,qC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}