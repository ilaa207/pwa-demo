{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport Header from './Header.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Ordine',\n  data() {\n    return {\n      textContent: '' // Contenuto del file di testo\n    };\n  },\n  components: {\n    Header\n  },\n  methods: {\n    inviaOrdine() {\n      // Crea un blob con i dati\n      const blob = new Blob([this.textContent], {\n        type: 'text/plain'\n      });\n\n      // Crea un link per il download\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'file.dat'; // Nome del file da scaricare\n\n      // Simula un click sul link per avviare il download\n      document.body.appendChild(a);\n      a.click();\n\n      // Rimuovi il link dal DOM\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url); // Libera la memoria\n    }\n\n    /*async inviaOrdine() {\n        try {\n            let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, {\n                textContent: '' // Contenuto del file di testo\n            });\n             console.log(response);\n            \n        } catch (error) {\n            console.error(\"Invio non riuscito, errore:\", error);\n        }\n    }*/\n  },\n  //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n  mounted() {\n    let userId = localStorage.getItem('id');\n    if (userId == null) {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["Header","axios","name","data","textContent","components","methods","inviaOrdine","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","mounted","userId","localStorage","getItem","$router","push"],"sources":["/home/ilaria/progettino/src/components/Ordine.vue"],"sourcesContent":["<template >\n    <Header/>\n    <div class=\"editor\">\n        <textarea v-model=\"textContent\"  @keyup.onEnter=\"update\" placeholder=\"Scrivi qui...\"></textarea>\n    </div>\n    <div class=\"invia\">\n        <button v-on:click=\"inviaOrdine\">Invia ordine</button>\n    </div>\n</template>\n\n<script>\nimport Header from './Header.vue';\nimport axios from 'axios';\n    export default {\n        name:'Ordine',\n        data() {\n    return {\n      textContent: '' // Contenuto del file di testo\n    };\n  },\n        components:{\n            Header\n        },\n        methods: {\n            inviaOrdine() {\n      // Crea un blob con i dati\n      const blob = new Blob([this.textContent], { type: 'text/plain' });\n\n      // Crea un link per il download\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = 'file.dat'; // Nome del file da scaricare\n\n      // Simula un click sul link per avviare il download\n      document.body.appendChild(a);\n      a.click();\n\n      // Rimuovi il link dal DOM\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url); // Libera la memoria\n    }\n\n\n\n\n\n\n\n\n\n        /*async inviaOrdine() {\n            try {\n                let response = await axios.post(`https://phplaravel-729699-3062059.cloudwaysapps.com/api/v1/uploadOrderFile`, {\n                    textContent: '' // Contenuto del file di testo\n                });\n\n                console.log(response);\n                \n            } catch (error) {\n                console.error(\"Invio non riuscito, errore:\", error);\n            }\n        }*/\n    },\n        //controllo che l'utente sia loggato, lo faccio tramite l'id salvato e se non è loggato, rimando alla pagina di login\n        mounted() {\n        let userId = localStorage.getItem('id')\n        if (userId == null) {\n            this.$router.push({ name: 'Login' })\n        }\n    }\n    }\n</script>\n\n"],"mappings":";;;;AAWA,OAAOA,MAAK,MAAO,cAAc;AACjC,OAAOC,KAAI,MAAO,OAAO;AACrB,eAAe;EACXC,IAAI,EAAC,QAAQ;EACbC,IAAIA,CAAA,EAAG;IACX,OAAO;MACLC,WAAW,EAAE,EAAC,CAAE;IAClB,CAAC;EACH,CAAC;EACKC,UAAU,EAAC;IACPL;EACJ,CAAC;EACDM,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAG;MACpB;MACA,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC,IAAI,CAACL,WAAW,CAAC,EAAE;QAAEM,IAAI,EAAE;MAAa,CAAC,CAAC;;MAEjE;MACA,MAAMC,GAAE,GAAIC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MACrC,MAAMM,CAAA,GAAIC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAG,GAAIN,GAAG;MACZG,CAAC,CAACI,QAAO,GAAI,UAAU,EAAE;;MAEzB;MACAH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,CAAC,CAAC;MAC5BA,CAAC,CAACO,KAAK,CAAC,CAAC;;MAET;MACAN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,CAAC,CAAC;MAC5BF,GAAG,CAACW,eAAe,CAACZ,GAAG,CAAC,EAAE;IAC5B;;IAUI;;;;;;;;;;;EAYJ,CAAC;EACG;EACAa,OAAOA,CAAA,EAAG;IACV,IAAIC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,IAAI;IACtC,IAAIF,MAAK,IAAK,IAAI,EAAE;MAChB,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;QAAE3B,IAAI,EAAE;MAAQ,CAAC;IACvC;EACJ;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}